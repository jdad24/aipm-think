{"version":3,"sources":["assets/mark.png","components/screens/persona/card/Card.js","components/screens/persona/index.js","components/common-ui/persona-header/persona-header.js","components/common-ui/persona-time/persona-time.js","components/common-ui/BasicCard/basicCard.js","components/common-ui/robot-list/robot-list.js","components/common-ui/Aux/Aux.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmContainer/GraphContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmContainer/PMTorqueTempContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmContainer/PMContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/PMDashboard.js","components/common-ui/SideBar/sideBar.js","components/common-ui/ScreenContents/screenContents.js","components/common-ui/Layout/layout.js","components/screens/predictive-maintenance/index.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/imgContainer.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/scoreContainer.js","components/screens/visual-insights/visual-insights-dashboard/vidashboard.js","components/screens/visual-insights/index.js","router/AppRouter.js","App.js","serviceWorker.js","index.js","assets/carla.png"],"names":["module","exports","__webpack_require__","p","data","title","backside","post","tool","imgurl","mark","redirect","redirectText","carla","FlipCard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","id","cardId","concat","setState","defineProperty","state","isFlipped0","isFlipped1","isFlipped2","personas","bind","assertThisInitialized","_this2","react_default","a","createElement","className","map","i","j","console","log","currentCard","key","react_card_flip_default","isFlipped","src","onClick","react_router_dom","to","Component","Persona","Card","header","props","role","personatime","name","basicCard","children","robotList","device","overview","r","common_ui_BasicCard_basicCard","value","clickHandler","aux","GraphContainer","undefined","xDataKey","dataKey","type","slice","element","temp","tempUpper","Temperatue","tempMiddle","tempLower","xPos","posUpper","X-Position","yPos","posMiddle","Y-Position","zPos","posLower","Z-Position","es6","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","activeDot","PureComponent","PMTorqueTempContainer","pmData","Gauge_default","Math","floor","length","torqueType","color","label","pmContainer_GraphContainer","tempType","posDirection","getDerivedStateFromProps","PMContainer","pmHealthData","pmContainer_PMTorqueTempContainer","PMDashboard","wsCredentials","yaskawa","kuka","replay","ws","webSocketHandler","wsUri","robot","WebSocket","onmessage","event","msg","JSON","parse","payload","msgType","toConsumableArray","overallHealth","health","values","onopen","onclose","setTimeout","axios","get","then","response","yaskawaHistory","kukaHistory","replayHistory","close","pmComponent","predictive_maintenance_dashboard_pmContainer_PMContainer","sideBar","screenContents","layout","persona_header_persona_header","common_ui_SideBar_sideBar","common_ui_ScreenContents_screenContents","content","PredictiveMaintenance","pmDashboard","robotEnvironment","robotClickHandler","target","getContent","pmContent","predictive_maintenance_predictive_maintenance_dashboard_PMDashboard","Aux","persona_time_persona_time","style","border","padding","robot_list_robot_list","common_ui_Layout_layout","ImgContainer","slot","img","renderImage","viImg","imgs","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","ScoreContainer","score","renderScore","videtails","mqttClient","imgdata","scoredata","mqttCredentials","clientId","random","toString","substr","broker","subscribe","username","password","robotSource","roboImg","image","speakingClassification","confidence","cur_scoredata","mqttHandler","mqtt_clientId","mqtt_broker","mqtt_username","mqtt_password","mqtt_client","Client","onConnectionLost","onMessageArrived","connect","onSuccess","onConnect","onFailure","userName","responseObject","errorCode","errorMessage","message","onMessageArrivedCommon","subscribeString","stringify","parsedTopic","destinationName","split","deviceId","valueCmdEvt","iotPayload","payloadString","imgComponent","s","imgContainer","scoreComponent","scoreContainer","VisualInsights","viDashboard","viContent","visual_insights_dashboard_vidashboard","visualInsights","AppRouter","react_router","exact","path","component","App","router_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6eaa0c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mark.d73d5003.png\";","import React, { Component } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport carla from \"../../../../assets/carla.png\"; // with import\nimport mark from \"../../../../assets/mark.png\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\n\nconst data = [\n  {\n    title: \"Mark\",\n    backside: \"Mark is Manufacturing Line Manager \",\n    post: \"Manufacturing Line Manager\",\n    tool: \"Predictive Maintanance\",\n    imgurl: mark,\n    redirect: \"/pm\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"3\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"4\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"5\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"6\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  }\n];\n\nclass FlipCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isFlipped0: false,\n      isFlipped1: false,\n      isFlipped2: false,\n      personas: data\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //handleClick(e) {\n  // e.preventDefault();\n  // this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n  //}\n\n  handleClick = id => () => {\n    const cardId = `isFlipped${id}`;\n    this.setState({ [cardId]: !this.state[cardId] });\n    // console.log(cardId);\n  };\n\n  render() {\n    return (\n      <div className=\"cards\">\n        {this.state.personas.map((i, j) => {\n          console.log(j);\n          let currentCard = `isFlipped${j}`;\n          return (\n            <div className=\"card\" key={i.title}>\n              <ReactCardFlip isFlipped={this.state[currentCard]}>\n                <div key=\"front\" className=\"mycard\">\n                  <img src={i.imgurl} onClick={this.handleClick(j)} />\n                  <div className=\"frontText\">\n                    <div className=\"frontTitle\"> {i.title}</div>\n                    {i.post}\n                  </div>\n                  <div className=\"frontText\">\n                    <br />\n                    {i.tool}\n                  </div>\n                </div>\n\n                <div\n                  onClick={this.handleClick(j)}\n                  key=\"back\"\n                  // className=\"mycard\"\n                >\n                  <div className=\"text\">{i.backside}</div>\n                </div>\n              </ReactCardFlip>\n              <Link to={i.redirect}>\n                <div className=\"frontText2\">\n                  <br />\n                  {i.redirectText} <span>&#8594;</span>\n                </div>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default FlipCard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FlipCard from \"../persona/card/Card\";\nimport \"./index.css\";\n\nclass Persona extends Component {\n  render() {\n    return (\n      <div className=\"parent\">\n        <div className=\"P1\">\n          <h1>AI Powered Manufacturing with Watson IoT</h1>\n        </div>\n\n        <div className=\"P2\">\n          <FlipCard />\n        </div>\n        <div className=\"P3\">\n          <h1>Watson IoT</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Persona;\n","import React from 'react';\nimport './persona-header.css';\nimport { Link } from 'react-router-dom';\n\nconst header = (props) => (\n    <div className=\"Header\">\n        <Link to=\"/\">\n            <div>\n                <button>arrow</button>\n            </div>\n        </Link>\n        <div>{props.role}</div>\n    </div>\n);\n\nexport default header;\n\n","import React from 'react';\nimport './persona-time.css';\n\nconst personatime = (props) => {\n\n    return (\n        <div className=\"Persona-time\">\n            <div>Good-morning {props.name}</div>\n            <div>Local Time, Date</div>\n            <div>Weather and Weather Event</div>\n        </div>\n    );\n\n}\n\nexport default personatime;","import React from 'react';\nimport './basicCard.css';\n\nconst basicCard = (props) => (\n    <div className=\"basicCard\">\n    {props.children}\n    </div>\n);\n\nexport default basicCard;","import React from 'react';\nimport './robot-list.css';\nimport BasicCard from '../BasicCard/basicCard';\n// import { Link } from \"react-router-dom\";\n\nconst robotList = (props) => {\n    const robots = [\n        { device: \"yaskawa\", overview: \" Yaskawa Overview\" },\n        { device: \"kuka\", overview: \" Kuka Overview\" },\n        { device: \"replay\", overview: \" Replay Overview\" }\n    ]\n\n    let robotList = robots.map(r => {\n        return (\n            <BasicCard key={r.device}>\n            <div className=\"Robot\">\n                <div>{r.device}</div>\n                <div>{r.overview}</div>\n                {/* <Link to=\"/pm\"> */}\n                    <button value={r.device} onClick={props.clickHandler}>Details</button>\n                {/* </Link> */}\n                {/* <button onClick={props.onclick}>Details</button> */}\n            </div>\n            </BasicCard>\n        );\n    })\n\n    return (\n        <div className=\"Robot-list\">\n            {robotList}\n        </div>\n    );\n}\n\nexport default robotList;","import React from 'react';\n\nconst aux = (props) => {\n    return props.children;\n}\n\nexport default aux;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass GraphContainer extends PureComponent {\n  state = {};\n\n  render() {\n\n    if (this.props.data === undefined)\n      return <div></div>\n\n    let data;\n    let xDataKey;\n    let dataKey;\n\n    switch (this.props.type) {\n      case \"tempUpper\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"temp\": element.tempUpper, \"Temperatue\": element.tempUpper });\n        });\n        break;\n      case \"tempMiddle\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"temp\": element.tempMiddle, \"Temperatue\": element.tempMiddle });\n        });\n        break;\n      case \"tempLower\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"temp\": element.tempLower, \"Temperatue\": element.tempLower });\n        });\n        break;\n      case \"xPos\":\n        xDataKey = \"xPos\";\n        dataKey = \"X-Position\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"xPos\": element.posUpper, \"X-Position\": element.posUpper });\n        });\n        break;\n      case \"yPos\":\n        xDataKey = \"yPos\";\n        dataKey = \"Y-Position\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"yPos\": element.posMiddle, \"Y-Position\": element.posMiddle });\n        });\n        break;\n      case \"zPos\":\n        xDataKey = \"zPos\";\n        dataKey = \"Z-Position\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"zPos\": element.posLower, \"Z-Position\": element.posLower });\n        });\n        break;\n    }\n\n    return (\n      <LineChart\n        width={300}\n        height={200}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={xDataKey} />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey={dataKey} stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      </LineChart>\n    );\n  }\n}\n\nexport default GraphContainer;","import React, { PureComponent } from 'react';\nimport './PMContainer.css';\nimport Gauge from 'react-svg-gauge';\nimport GraphContainer from './GraphContainer';\n\nclass PMTorqueTempContainer extends PureComponent {\n\n    state = {\n        pmData: null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            pmData: props.pmData\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"pmContainerRight\">\n                <div className=\"pmDetails\">\n                    <Gauge value={Math.floor(this.props.pmData[this.props.pmData.length - 1][this.props.torqueType])} width={300} height={200} color={\"#959DFF\"} label=\"Torque\" />\n                </div>\n                <div className=\"pmDetails\">\n                    <h1>{Math.floor(this.props.pmData[this.props.pmData.length - 1][this.props.torqueType])}</h1>Units\n                </div>\n                <div className=\"pmDetails\">\n                    <GraphContainer type={this.props.tempType} data={this.props.pmData} />\n                </div>\n                <div className=\"pmDetails\">\n                    <GraphContainer type={this.props.posDirection} data={this.props.pmData} />\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default PMTorqueTempContainer;","import React, { PureComponent } from 'react';\nimport './PMContainer.css';\nimport Gauge from 'react-svg-gauge';\nimport GraphContainer from './GraphContainer';\nimport PMTorqueTempContainer from './PMTorqueTempContainer';\n\nclass PMContainer extends PureComponent {\n\n    state = {\n        pmData: null,\n        pmHealthData:null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            pmData: props.pmData,\n            pmHealthData: props.pmHealthData\n        }\n\n    }\n\n    render() {\n\n        let pmData = <p>No Data </p>\n        console.log(this.props);\n        if (this.props.pmData && this.props.pmHealthData) {\n            console.log(this.props.pmHealthData);\n            pmData =\n                <div className=\"pmContainer\">\n                    <div className=\"pmContainerLeft\">\n                        <div className=\"pmContainerRight\">\n                        <Gauge value={Math.floor(this.props.pmHealthData[this.props.pmHealthData.length - 1]*100)} width={300} height={200} color={\"#959DFF\"} label=\"Health\" />\n                        </div>\n                        <div className=\"pmContainerRight\">Details</div>\n                        <div className=\"pmContainerRight\">Details</div>\n                    </div>\n                    <div>\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueUpper\" tempType=\"tempUpper\" posDirection=\"xPos\" />\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueMiddle\" tempType=\"tempMiddle\" posDirection=\"yPos\" />\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueLower\" tempType=\"tempLower\" posDirection=\"zPos\" />\n                    </div>\n                </div>\n\n        }\n\n        return (\n            <div >\n                {pmData}\n            </div>\n        );\n    }\n}\n\n\nexport default PMContainer;","import React, { Component } from 'react';\nimport PMContainer from './pmContainer/PMContainer';\nimport axios from 'axios';\nimport './PMDashboard.css';\n\nclass PMDashboard extends Component {\n\n    //state is having properties:\n    //1.) yaskawaData : This will store Yaskawa Torque, Temperatures and Position Values\n    //2.) yaskawaHealth : This will store Yaskawa health Values\n    //3.) kukaData : This will store Yaskawa Torque, Temperatures and Position Values\n    //4.) kukaHealth : This is store Kuka health values\n    //5.) replayData :\n    //6.) replayHealth :\n\n    state = {\n        pmHealthData:[0]\n    };\n\n    wsCredentials = {\n        \"yaskawa\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n    ws = null;\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        switch(this.props.robot){\n            \n        case \"yaskawa\": \n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/yaskawaHistory\").then((response) => {\n                let yaskawaHistory = response.data.yaskawaHistory.map((element) => {\n                    // console.log(JSON.parse(element));\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: yaskawaHistory });\n            });\n            break;\n        case \"kuka\":\n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/kukaHistory\").then((response) => {\n                let kukaHistory = response.data.kukaHistory.map((element) => {\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: kukaHistory });\n            });\n            break;\n        case \"replay\":\n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/replayHistory\").then((response) => {\n                let replayHistory = response.data.replayHistory.map((element) => {\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: replayHistory });\n            });\n            break;\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.ws) {\n            this.ws.close();\n        }\n    }\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n        this.ws = ws;\n        ws.onmessage = (event) => {\n            let msg = JSON.parse(event.data);\n            msg = msg.payload === undefined ? msg : msg.payload;\n            console.log(msg);\n\n            switch(msg.msgType){\n\n            case \"yaskawaTorqueTemp\": \n            case \"kukaTorqueTemp\":\n            case \"kukaTorque\":   \n                console.log(msg);\n                this.setState({\n                    pmData: [...this.state.pmData, msg]\n                });\n            break;\n            case \"yaskawaRobotHealth\":\n            case \"kukaRobotHealth\": \n                // console.log(\"10\",msg.health.values[0][10]);\n                this.setState({\n                    pmHealthData: [...this.state.pmHealthData, msg.overallHealth=== undefined ? msg.health.values[0][10]: Math.floor(msg.overallHealth)/100 ]\n                });\n            break;\n            // case \"repl\"\n\n            }\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        ws.onclose = () => {\n            setTimeout(this.webSocketHandler, 3000);\n        }\n    }\n\n    render() {\n\n        let pmComponent = <PMContainer pmData={this.state.pmData} pmHealthData={this.state.pmHealthData} />;\n\n        return (\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div><h1>{this.props.robot}</h1></div>\n                    <div className=\"pmDataContainer\">\n                    </div>\n                    <div className=\"pmDataContainer\">\n                        {pmComponent}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PMDashboard;","import React from 'react';\nimport './sideBar.css';\n\nconst sideBar = () => (\n    <div className=\"sideBar\">SIDEBAR\n    </div>\n);\n\nexport default sideBar;","import React from 'react';\nimport './screenContents.css';\n\nconst screenContents = (props) => (\n    <div className=\"screenContents\">\n    {props.children}\n    </div>\n);\n\nexport default screenContents;","import React from 'react';\nimport './layout.css';\nimport Header from '../persona-header/persona-header';\nimport SideBar from '../SideBar/sideBar';\nimport ScreenContents from '../ScreenContents/screenContents';\nimport Aux from '../Aux/Aux';\n\nconst layout = (props) => (\n    <div className='layout'>\n        <Header role={props.role}/>\n        <SideBar />\n        <ScreenContents>\n            {props.content}\n        </ScreenContents>\n        <div className='rightBar'>rightBar</div>\n        <div className='footer'>Watson IoT</div>\n    </div>\n);\n\nexport default layout;","import React, { Component } from 'react';\nimport Header from '../../common-ui/persona-header/persona-header';\nimport PersonaTime from '../../common-ui/persona-time/persona-time';\nimport RobotList from '../../common-ui/robot-list/robot-list';\nimport Aux from '../../common-ui/Aux/Aux';\nimport PMDashboard from './predictive-maintenance-dashboard/PMDashboard';\nimport Layout from '../../common-ui/Layout/layout';\n// import { Client } from './node_modules/paho-mqtt';\nimport './PM.css';\n\n\nclass PredictiveMaintenance extends Component {\n\n    state = {\n        pmDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            pmDashboard: true,\n            robotEnvironment: event.target.value\n        });\n    }\n\n    getContent = () => {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let pmContent = \"\";\n\n        if (this.state.pmDashboard) {\n            pmContent = <PMDashboard robot={this.state.robotEnvironment}/>\n        } else {\n            pmContent =\n                <Aux>\n                    <div className=\"persona-section\">\n                        <PersonaTime name=\"Carla\" />\n                        <div style={temp_style}> Assigned to line 3 today</div>\n                    </div>\n                    <RobotList clickHandler={this.robotClickHandler} />\n                </Aux>\n        }\n\n        let PredictiveMaintenance = (<div className=\"PredicitiveMaintenance\" >\n                                    {pmContent}\n                             </div>);\n\n         return PredictiveMaintenance;\n    }\n\n    render() {\n        let PredictiveMaintenance = this.getContent();\n        return (\n\n            <Layout\n                role=\"Line Manager Dashboard\"\n                content={PredictiveMaintenance}\n            />\n\n        );\n    }\n}\n\nexport default PredictiveMaintenance;\n","import React, { PureComponent } from 'react';\n// import Aux from '../../../../common-ui/Aux/Aux';\nimport BasicCard from '../../../../common-ui/BasicCard/basicCard';\nimport './viContainer.css';\n\nclass ImgContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        img: null\n\n    }\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    static getDerivedStateFromProps = (props, state) => {\n        return {\n            slot: props.slot,\n            img: props.img\n        }\n\n    }\n\n    renderImage = () => {\n        let viImg = <p>No image </p>\n        let imgs = null;\n\n        if (this.state.img) {\n            let viImgStyle = \"url(data:image/jpeg;base64,\" + this.state.img + \")\";\n            imgs = {\n                backgroundImage: viImgStyle,\n                backgroundRepeat: \"no-repeat\",\n                width: \"100%\",\n                height: \"100%\",\n                backgroundSize: \"contain\",\n                backgroundPosition: \"center\"\n            }\n\n            viImg = <div style={imgs} >image: </div>\n        }\n\n        return viImg;\n    }\n\n    render() {\n\n        return (\n            <BasicCard>\n            <div className=\"imgContainer\" >\n                {this.renderImage()}\n            </div>\n            </BasicCard>\n        );\n    }\n}\n\n\nexport default ImgContainer;","import React, { PureComponent } from 'react';\n// import Aux from '../../../../common-ui/Aux/Aux';\nimport BasicCard from '../../../../common-ui/BasicCard/basicCard';\nimport './viContainer.css';\n\nclass ScoreContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        score: null\n    }\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            slot: props.slot,\n            score: props.score\n        }\n\n    }\n\n    renderScore = () => {\n        let score = <p>No score </p>\n        if (this.state.score) {\n            score = <div>Score:\n            <div>iotTopic:  {this.state.score[0]}</div>\n                <div>robotEnvironment:  {this.state.score[0]}</div>\n                <div>mySpeakingClassification:  {this.state.score[1]}</div>\n                <div>myConfidence:  {this.state.score[2]}</div>\n                <div>mySlot:  {this.state.score[3]}</div>\n            </div>\n        }\n        return score;\n    }\n\n    render() {\n        return (\n            <BasicCard>\n            <div className=\"scoreContainer\" >\n                {this.renderScore()}\n            </div>\n            </BasicCard>\n        );\n    }\n}\n\n\nexport default ScoreContainer;","import React, { Component } from 'react';\nimport Aux from '../../../common-ui/Aux/Aux';\nimport ImgContainer from './viContainer/imgContainer';\nimport ScoreContainer from './viContainer/scoreContainer';\nimport { Client } from 'paho-mqtt';\nimport './vidashboard.css';\n\nclass videtails extends Component {\n\n    state = {\n        mqttClient: null,\n        imgdata: [\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null }\n        ],\n        scoredata: [\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null }\n        ]\n    }\n\n    mqttCredentials = [\n        {\n            clientId: 'a:qjue4x:' + Math.random().toString(16).substr(2, 8),\n            broker: \"qjue4x.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-qjue4x-al7mm3hvo4\",\n            password: \"+4B0N)ZGk@BVH1BFy9\"\n\n        },\n        {\n            clientId: 'a:xbyrsp:' + Math.random().toString(16).substr(2, 8),\n            broker: \"xbyrsp.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-xbyrsp-0rf3yixsqn\",\n            password: \"2I+?sdkfxml_OR8SMR\"\n\n        }\n    ]\n    //required if web sockets are different for different devices\n    wsCredentials = {\n        \"yaskawa\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n\n    ws = null;\n\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        //this.mqttHandler(this.props.robot);\n    };\n\n    componentWillUnmount(){\n        console.log(\"componentWillUnmount\");\n        if(this.ws){\n            this.ws.close(); \n            console.log(\"YES! - componentWillUnmount\");\n            \n        }\n    }\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n        this.ws = ws;\n        ws.onmessage = (event) => {\n            // parse the incoming message as a JSON object\n            let msg = JSON.parse(event.data);\n            if(msg.msgType === undefined){\n                msg = msg.payload;\n                console.log(\"msg.msgType undefined\");\n            } else{\n                console.log(\"msg.msgType: \"+msg.msgType);\n            }\n\n            console.log(\"props: \" + this.props.robot + \" msg: \");\n            console.log(msg);\n             if ((msg.msgType !== \"yaskawaTorqueTemp\") && (msg.msgType !== \"yaskawaRobotHealth\")) {\n                //debugger;\n\n                if(msg.msgType === \"image\" && msg.robotSource === this.props.robot ){\n                    let slot = msg.slot;\n\n                    console.log(\"ws image msg.payload.robotEnvironment=\" + msg.robotSource);\n                        let roboImg = msg.image.toString();\n                        let imgdata = this.state.imgdata;\n                        imgdata[slot - 1].slot = slot;\n                        imgdata[slot - 1].img = roboImg;\n\n                        this.setState({\n                            imgdata: imgdata\n                        }, () => {\n                            console.log(\"viIMAGE - Parent\");\n                            console.log(this.state);\n                        });\n                }\n                \n\n                //below line is required only if ws socket is the same        \n                // if (this.props.robot === msg.payload.robotEnvironment) {\n                     else if (msg.type === \"scoring\" && msg.robotSource === this.props.robot) {\n                         console.log(\"Score MSG\");\n                         console.log(msg);\n                         let score = [msg.robotSource, msg.speakingClassification, msg.confidence, msg.slot];\n                                let cur_scoredata = this.state.scoredata;\n                                cur_scoredata[msg.slot - 1].score = score;\n                                cur_scoredata[msg.slot - 1].slot = msg.slot;\n\n                                this.setState({\n                                    scoredata: cur_scoredata\n                                });\n                         \n                        // // let myTopic = message.destinationName;\n                        // // let parsedTopic = myTopic.split(\"/\");\n                        // let deviceId = parsedTopic[4];\n                        // let valueCmdEvt = parsedTopic[6];\n                        // let textJson = parsedTopic[8];\n\n                        // if (textJson === \"json\") {\n                        //     let iotPayload = JSON.parse(message.payloadString);\n\n                        //     if (valueCmdEvt === \"score\") {\n                        //         let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n                        //         let cur_scoredata = this.state.scoredata;\n                        //         cur_scoredata[iotPayload.slot - 1].score = score;\n                        //         cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n                        //         this.setState({\n                        //             scoredata: cur_scoredata\n                        //         });\n\n                        //     }\n                        // }\n\n                    }\n                }\n            // }\n\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        // ws.onclose = () => {\n        //     setTimeout(this.webSocketHandler, 3000);\n        // }\n    }\n\n    mqttHandler = (device) => {\n\n        let mqtt_clientId = null;\n        let mqtt_broker = null;\n        let mqtt_username = null;\n        let mqtt_password = null;\n\n\n\n        switch (device) {\n            case 'yaskawa001':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                // debugger;\n                break;\n\n            case 'kuka001':\n                mqtt_clientId = this.mqttCredentials[1].clientId;\n                mqtt_broker = this.mqttCredentials[1].broker;\n                mqtt_username = this.mqttCredentials[1].username;\n                mqtt_password = this.mqttCredentials[1].password;\n                // console.log(\"switch - device -\" + device);\n                break;\n\n            case 'replay':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                // console.log(\"switch - device -\" + device);\n                break;\n\n            // case 'default': \n            // mqtt_clientId = this.mqttCredentials[0].clientId;\n            // mqtt_broker = this.mqttCredentials[0].broker;\n            // mqtt_username = this.mqttCredentials[0].username;\n            // mqtt_password = this.mqttCredentials[0].password;\n\n        }\n        // Create a client instance\n        let mqtt_client = new Client(mqtt_broker, 1883, mqtt_clientId);\n\n        // set callback handlers\n        mqtt_client.onConnectionLost = this.onConnectionLost;\n        mqtt_client.onMessageArrived = this.onMessageArrived;\n\n        this.setState({\n            mqttClient: mqtt_client\n        }, () => {\n            this.state.mqttClient.connect({\n                onSuccess: this.onConnect,\n                onFailure: this.onFailure,\n                userName: mqtt_username,   // apikey\n                password: mqtt_password\n            })\n        })\n\n    }\n\n    // called when the client loses its connection\n    onConnectionLost = (responseObject) => {\n        if (responseObject.errorCode !== 0) {\n            console.log(\"onConnectionLost:\" + responseObject.errorMessage);\n        }\n    }\n\n    onMessageArrived = (message) => {\n        console.log(\"inside onMessage 2\");\n        this.onMessageArrivedCommon(message);\n    }\n\n    onConnect = (props) => {\n        // Once a connection has been made, make a subscription and send a message.\n        let subscribeString = null;\n        switch (this.props.robot) {\n            case 'yaskawa001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'kuka001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'replay':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n        }\n        console.log(\"onConnect\");\n        this.state.mqttClient.subscribe(subscribeString);\n    }\n\n    onFailure = (responseObject) => {\n        // Once a connection has been made, make a subscription and send a message.\n        console.log(\"onFailure\" + JSON.stringify(responseObject));\n    }\n\n    // called when a message arrives\n    onMessageArrivedCommon = (message) => {\n\n        let myTopic = message.destinationName;\n        let parsedTopic = myTopic.split(\"/\");\n        let deviceId = parsedTopic[4];\n        let valueCmdEvt = parsedTopic[6];\n        let textJson = parsedTopic[8];\n\n        if (textJson === \"json\") {\n            let iotPayload = JSON.parse(message.payloadString);\n            console.log(\"wholedata\",valueCmdEvt,iotPayload);\n\n            if (valueCmdEvt === \"score\") {\n                let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n                let cur_scoredata = this.state.scoredata;\n                cur_scoredata[iotPayload.slot - 1].score = score;\n                cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n                this.setState({\n                    scoredata: cur_scoredata\n                });\n\n            }\n        }\n\n    }\n\n    render(props) {\n\n        let imgComponent = this.state.imgdata.map((s, i) => {\n\n            return (<ImgContainer\n                img={s.img}\n                slot={s.slot}\n                key={i} />);\n        });\n\n        let scoreComponent = this.state.scoredata.map((s, i) => {\n\n            return (\n                <ScoreContainer\n                    slot={s.slot}\n                    score={s.score}\n                    key={i} />\n            );\n        });\n\n        return (\n            <div className=\"dashboardContainer\">\n                <div>{this.props.robot}</div>\n                <div className=\"imgScoreContainer\">\n                    {imgComponent}\n                </div>\n                <div className=\"imgScoreContainer\">\n                    {scoreComponent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default videtails;","import React, { Component } from 'react';\nimport Header from '../../common-ui/persona-header/persona-header';\nimport PersonaTime from '../../common-ui/persona-time/persona-time';\nimport RobotList from '../../common-ui/robot-list/robot-list';\nimport Aux from '../../common-ui/Aux/Aux';\nimport VIdashboard from './visual-insights-dashboard/vidashboard';\nimport Layout from '../../common-ui/Layout/layout';\n// import { Client } from 'paho-mqtt';\nimport './vi.css';\n\nclass VisualInsights extends Component {\n\n    state = {\n        viDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            viDashboard: true,\n            robotEnvironment: event.target.value\n        });\n        console.log(event.target.value);\n    }\n\n    // backArrowHandler = () => {\n    //     this.setState({\n    //         viDashboard: false,\n    //         robotEnvironment: null\n    //     });\n    // }\n\n    getContent = () => {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let viContent = \"\";\n\n        if (this.state.viDashboard) {\n            // console.log(\"inside IF\");\n            // console.log(this.state.imgMsg);\n            viContent =\n                <VIdashboard robot={this.state.robotEnvironment} />\n        } else {\n            viContent =\n                <Aux>\n                    <div className=\"persona-section\">\n                        <PersonaTime name=\"Carla\" />\n                        <div style={temp_style}> Assigned to line 3 today</div>\n                    </div>\n                    <RobotList clickHandler={this.robotClickHandler} />\n                </Aux>\n        }\n\n\n        let visualInsights = (<div className=\"VisualInsights\" >\n                                    {viContent}\n                             </div>);\n\n        return visualInsights;\n    }\n\n    render() {\n\n        let visualInsights = this.getContent();\n\n        return (\n\n            <Layout\n                role=\"Line Manager Dashboard\"\n                content={visualInsights}\n            />\n\n\n\n        );\n    }\n}\n\nexport default VisualInsights;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Persona from \"../components/screens/persona\";\nimport PredictiveMaintenance from \"../components/screens/predictive-maintenance\";\nimport VisualInsights from \"../components/screens/visual-insights\";\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Persona} />\n          <Route path=\"/pm\" component={PredictiveMaintenance} />\n          <Route path=\"/vi\" component={VisualInsights} />\n          {/* <Route path=\"/contact\" component={Contact} />\n          <Route component={Notfound} /> */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport \"./styles/App.css\";\n\n// IN THIS FILE :\n// a. site wide styles\n// b. site wide settings such Redux, etc.\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/carla.122e76ac.png\";"],"sourceRoot":""}