{"version":3,"sources":["assets/carla.png","assets/mark.png","assets/Paul.png","assets/Rhonda.png","assets/Joe.png","assets/pene.png","components/screens/persona/card/Card.js","components/screens/persona/index.js","components/common-ui/Aux/Aux.js","components/common-ui/personaEnv/personaEnv.js","components/common-ui/BasicCard/basicCard.js","components/common-ui/robot-list/robot-list.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmContainer/GraphContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmContainer/PMTorqueTempContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmContainer/PMContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/PMDashboard.js","components/common-ui/Layout/Header/header.js","components/common-ui/Layout/SideBar/sideBar.js","components/common-ui/Layout/ScreenContents/screenContents.js","components/common-ui/Layout/ScreenTop/screenTop.js","components/common-ui/Layout/layout.js","components/screens/predictive-maintenance/index.js","components/screens/visual-insights/lineList/lineList.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/imgContainer.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/scoreContainer.js","components/screens/visual-insights/visual-insights-dashboard/vidashboard.js","components/screens/visual-insights/index.js","router/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","title","backside","post","tool","imgurl","mark","redirect","redirectText","carla","paul","joe","rhonda","pene","FlipCard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","id","cardId","concat","setState","defineProperty","state","isFlipped0","isFlipped1","isFlipped2","personas","bind","assertThisInitialized","_this2","react_default","a","createElement","className","map","i","j","console","log","currentCard","key","react_card_flip_default","isFlipped","src","onClick","react_router_dom","to","Component","Persona","Card","aux","props","children","personaEnv","cur_date","d","Date","getMonth","getDate","getFullYear","avg_metrics","name","Aux","basicCard","style","classname","robotList","device","overview","r","common_ui_BasicCard_basicCard","value","clickHandler","GraphContainer","undefined","xDataKey","dataKey","type","slice","element","temp","tempUpper","Temperatue","tempMiddle","tempLower","xPos","posUpper","toFixed","X-Position","yPos","posMiddle","Y-Position","zPos","posLower","Z-Position","es6","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","activeDot","PureComponent","PMTorqueTempContainer","pmData","Gauge_default","length","torqueType","min","max","color","label","Math","floor","pmContainer_GraphContainer","tempType","posDirection","getDerivedStateFromProps","PMContainer","pmHealthData","pmContainer_PMTorqueTempContainer","PMDashboard","wsCredentials","yaskawa","kuka","replay","ws","webSocketHandler","wsUri","robot","WebSocket","onmessage","event","msg","JSON","parse","payload","msgType","toConsumableArray","overallHealth","onopen","onclose","setTimeout","axios","get","then","response","yaskawaHistory","kukaHistory","replayHistory","close","pmComponent","predictive_maintenance_dashboard_pmContainer_PMContainer","header","role","sideBar","screenContents","screenTop","layout","Layout_Header_header","Layout_SideBar_sideBar","Layout_ScreenTop_screenTop","Layout_ScreenContents_screenContents","content","PredictiveMaintenance","pmDashboard","robotEnvironment","robotClickHandler","target","getMainContent","pmContent","predictive_maintenance_predictive_maintenance_dashboard_PMDashboard","robot_list_robot_list","getPersonaEnv","common_ui_personaEnv_personaEnv","PersonaEnv","common_ui_Layout_layout","lineList","line_list","line","imgSrc","imgNum","ImgContainer","slot","img","renderImage","viImg","imgs","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","ScoreContainer","score","renderScore","confidence_style","backgroundColor","renderValidation","validate","videtails","mqttClient","imgdata","scoredata","robotSource","roboImg","image","toString","speakingClassification","confidence","cur_scoredata","getImgComponent","s","imgContainer","getScoreComponent","scoreContainer","imgComponent","scoreComponent","VisualInsights","viDashboard","viContent","visual_insights_dashboard_vidashboard","visual_insights_lineList_lineList","visualInsights","AppRouter","react_router","exact","path","component","App","router_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cd8c6fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carla.122e76ac.png\";","module.exports = __webpack_public_path__ + \"static/media/mark.d73d5003.png\";","module.exports = __webpack_public_path__ + \"static/media/Paul.fe133dcc.png\";","module.exports = __webpack_public_path__ + \"static/media/Rhonda.c7170264.png\";","module.exports = __webpack_public_path__ + \"static/media/Joe.ef8adf14.png\";","module.exports = __webpack_public_path__ + \"static/media/pene.6e31cf52.png\";","import React, { Component } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport carla from \"../../../../assets/carla.png\"; // with import\nimport mark from \"../../../../assets/mark.png\";\nimport paul from \"../../../../assets/Paul.png\";\nimport rhonda from \"../../../../assets/Rhonda.png\";\nimport joe from \"../../../../assets/Joe.png\";\nimport pene from \"../../../../assets/pene.png\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\n\nconst data = [\n  {\n    title: \"Mark\",\n    backside: \"Mark is Manufacturing Line Manager \",\n    post: \"Manufacturing Line Manager\",\n    tool: \"Predictive Maintanance\",\n    imgurl: mark,\n    redirect: \"/pm\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Paul\",\n    backside: \"Paul is Equipment Maintenance Assistant\",\n    post: \"Plant Manager\",\n    tool: \"Equipment Maintenance Advisor\",\n    imgurl: paul,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Joe\",\n    backside: \"Joe is Plant Technician\",\n    post: \"Plant Technician\",\n    tool: \"Procurement Manager\",\n    imgurl: joe,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Rhonda\",\n    backside: \"Rhonda is Operations Manager\",\n    post: \"Operations Manager\",\n    tool: \"Net App\",\n    imgurl: rhonda,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Penelope\",\n    backside: \"Penelope is Procurement Manager\",\n    post: \"Procurement Manager\",\n    tool: \"SAP, Blockchain\",\n    imgurl: pene,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  }\n];\n\nclass FlipCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isFlipped0: false,\n      isFlipped1: false,\n      isFlipped2: false,\n      personas: data\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //handleClick(e) {\n  // e.preventDefault();\n  // this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n  //}\n\n  handleClick = id => () => {\n    const cardId = `isFlipped${id}`;\n    this.setState({ [cardId]: !this.state[cardId] });\n    // console.log(cardId);\n  };\n\n  render() {\n    return (\n      <div className=\"cards\">\n        {this.state.personas.map((i, j) => {\n          console.log(j);\n          let currentCard = `isFlipped${j}`;\n          return (\n            <div className=\"card\" key={i.title}>\n              <ReactCardFlip isFlipped={this.state[currentCard]}>\n                <div key=\"front\" className=\"mycard\">\n                  <img src={i.imgurl} onClick={this.handleClick(j)} />\n                  <div className=\"frontText\">\n                    <div className=\"frontTitle\"> {i.title}</div>\n                    {i.post}\n                  </div>\n                  <div className=\"frontText\">\n                    <br />\n                    {i.tool}\n                  </div>\n                </div>\n\n                <div\n                  onClick={this.handleClick(j)}\n                  key=\"back\"\n                  // className=\"mycard\"\n                >\n                  <div className=\"text\">{i.backside}</div>\n                </div>\n              </ReactCardFlip>\n              <Link to={i.redirect}>\n                <div className=\"frontText2\">\n                  <br />\n                  {i.redirectText} <span>&#8594;</span>\n                </div>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default FlipCard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FlipCard from \"../persona/card/Card\";\nimport \"./index.css\";\n\nclass Persona extends Component {\n  render() {\n    return (\n      <div className=\"parent\">\n        <div className=\"P1\">\n          <div>AI Powered Manufacturing with Watson IoT</div>\n        </div>\n\n        <div className=\"P2\">\n          <FlipCard />\n        </div>\n        <div className=\"P3\">\n          <h1>Watson IoT</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Persona;\n","import React from 'react';\n\nconst aux = (props) => {\n    return props.children;\n}\n\nexport default aux;","import React from 'react';\nimport './personaEnv.css';\nimport Aux from '../Aux/Aux';\n\n\nconst getDate = () => {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n\n    let d = new Date();\n    let cur_date = monthNames[d.getMonth()] + \" \" + d.getDate() + \"th, \" + d.getFullYear();\n\n    return cur_date;\n}\n\nconst personaEnv = (props) => {\n    let cur_date = getDate();\n    let avg_metrics = null;\n    if(props.name === \"Carla\"){\n        avg_metrics = (<Aux>\n            <div className=\"topBottom\">\n                <div>Your Average Accuracy</div>\n                <div>98%</div>\n            </div>\n                <div className=\"topBottom\">\n                    <div>Your Average Speed</div>\n                    <div>34/min</div>\n            </div>\n            </Aux>);\n    }\n        \n    return (\n        <div className=\"personaEnv\">\n            <div className=\"topBottom\">\n                <div>Good-morning {props.name}</div>\n                <div>{cur_date}</div>\n            </div>\n            <div className=\"personaWeather\">\n                <div>\n                    {/* <span> */}\n                    {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0.5 -4.5 100 35\"><path d=\"M23.5 22H23v-2h.5a4.5 4.5 0 0 0 .36-9H23l-.1-.82a7 7 0 0 0-13.88 0L9 11h-.86a4.5 4.5 0 0 0 .36 9H9v2h-.5A6.5 6.5 0 0 1 7.2 9.14a9 9 0 0 1 17.6 0A6.5 6.5 0 0 1 23.5 22z\"/><path d=\"M15.87 30.5l-1.74-1 3.15-5.5h-6l4.85-8.5 1.74 1-3.15 5.5h6l-4.85 8.5z\"/></svg> */}\n                    {/* </span> */}\n                    <span>Thunderstorm</span>\n                </div>\n                <div>Temperature 27</div>\n                <div>Humidity 97%</div>\n            </div>\n            {avg_metrics}\n        </div>\n    );\n\n}\n\nexport default personaEnv;","import React from 'react';\nimport './basicCard.css';\n\nconst basicCard = (props) => {\n    let style = props.classname + \" basicCard\";\nreturn (\n    <div className={style}>\n    {props.children}\n    </div>\n);\n}\n\n\nexport default basicCard;","import React from 'react';\nimport './robot-list.css';\nimport BasicCard from '../BasicCard/basicCard';\n// import { Link } from \"react-router-dom\";\n\nconst robotList = (props) => {\n    const robots = [\n        { device: \"yaskawa\", overview: \" Yaskawa Overview\" },\n        { device: \"kuka\", overview: \" Kuka Overview\" },\n        { device: \"replay\", overview: \" Replay Overview\" }\n    ]\n\n    let robotList = robots.map(r => {\n        return (\n            <BasicCard key={r.device}>\n            <div className=\"Robot\">\n                <div>{r.device}</div>\n                <div>{r.overview}</div>\n                {/* <Link to=\"/pm\"> */}\n                    <button value={r.device} onClick={props.clickHandler}>Details</button>\n                {/* </Link> */}\n                {/* <button onClick={props.onclick}>Details</button> */}\n            </div>\n            </BasicCard>\n        );\n    })\n\n    return (\n        <div className=\"Robot-list\">\n            {robotList}\n        </div>\n    );\n}\n\nexport default robotList;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass GraphContainer extends PureComponent {\n  state = {};\n\n  render() {\n\n    if (this.props.data === undefined)\n      return <div></div>\n\n    let data;\n    let xDataKey;\n    let dataKey;\n\n    switch (this.props.type) {\n      case \"tempUpper\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"temp\": element.tempUpper, \"Temperatue\": element.tempUpper });\n        });\n        break;\n      case \"tempMiddle\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"temp\": element.tempMiddle, \"Temperatue\": element.tempMiddle });\n        });\n        break;\n      case \"tempLower\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"temp\": element.tempLower, \"Temperatue\": element.tempLower });\n        });\n        break;\n      case \"xPos\":\n        xDataKey = \"xPos\";\n        dataKey = \"X-Position\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"xPos\": element.posUpper.toFixed(2), \"X-Position\": element.posUpper.toFixed(2) });\n        });\n        break;\n      case \"yPos\":\n        xDataKey = \"yPos\";\n        dataKey = \"Y-Position\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"yPos\": element.posMiddle.toFixed(2), \"Y-Position\": element.posMiddle.toFixed(2) });\n        });\n        break;\n      case \"zPos\":\n        xDataKey = \"zPos\";\n        dataKey = \"Z-Position\";\n        data = this.props.data.slice(0,10).map(element => {\n          return ({ \"zPos\": element.posLower.toFixed(2), \"Z-Position\": element.posLower.toFixed(2) });\n        });\n        break;\n    }\n\n    return (\n      <LineChart\n        width={400}\n        height={200}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        {/* <XAxis/> */}\n        <YAxis dataKey={xDataKey} />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey={dataKey} stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      </LineChart>\n    );\n  }\n}\n\nexport default GraphContainer;","import React, { PureComponent } from 'react';\nimport './PMContainer.css';\nimport Gauge from 'react-svg-gauge';\nimport GraphContainer from './GraphContainer';\n\nclass PMTorqueTempContainer extends PureComponent {\n\n    state = {\n        pmData: null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            pmData: props.pmData\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"pmContainerRight\">\n                <div className=\"pmDetails\">\n                    <Gauge value={this.props.pmData[this.props.pmData.length - 1][this.props.torqueType].toFixed(0)} width={300} height={200} min={0} max={10000} color={\"#959DFF\"} label=\"Torque\" />\n                </div>\n                <div className=\"pmDetails\">\n                    <h1>{Math.floor(this.props.pmData[this.props.pmData.length - 1][this.props.torqueType])}</h1>Units\n                </div>\n                <div className=\"pmDetails\">\n                    <GraphContainer type={this.props.tempType} data={this.props.pmData} />\n                </div>\n                <div className=\"pmDetails\">\n                    <GraphContainer type={this.props.posDirection} data={this.props.pmData} />\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default PMTorqueTempContainer;","import React, { PureComponent } from 'react';\nimport './PMContainer.css';\nimport Gauge from 'react-svg-gauge';\nimport GraphContainer from './GraphContainer';\nimport PMTorqueTempContainer from './PMTorqueTempContainer';\n\nclass PMContainer extends PureComponent {\n\n    state = {\n        pmData: null,\n        pmHealthData:null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            pmData: props.pmData,\n            pmHealthData: props.pmHealthData\n        }\n\n    }\n\n    render() {\n\n        let pmData = <p>No Data </p>\n        console.log(this.props);\n        if (this.props.pmData && this.props.pmHealthData) {\n            console.log(this.props.pmHealthData);\n            pmData =\n                <div className=\"pmContainer\">\n                    <div className=\"pmContainerLeft\">\n                        <div className=\"pmContainerRight\">\n                        <Gauge value={this.props.pmHealthData[this.props.pmHealthData.length - 1].toFixed(2)} width={300} height={200} color={\"#959DFF\"} label=\"Health\" />\n                        </div>\n                        <div className=\"pmContainerRight\">Details</div>\n                        <div className=\"pmContainerRight\">Details</div>\n                    </div>\n                    <div>\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueUpper\" tempType=\"tempUpper\" posDirection=\"xPos\" />\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueMiddle\" tempType=\"tempMiddle\" posDirection=\"yPos\" />\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueLower\" tempType=\"tempLower\" posDirection=\"zPos\" />\n                    </div>\n                </div>\n\n        }\n\n        return (\n            <div >\n                {pmData}\n            </div>\n        );\n    }\n}\n\n\nexport default PMContainer;","import React, { Component } from 'react';\nimport PMContainer from './pmContainer/PMContainer';\nimport BasicCard from '../../../common-ui/BasicCard/basicCard'\nimport axios from 'axios';\nimport './PMDashboard.css';\n\nclass PMDashboard extends Component {\n\n    //state is having properties:\n    //1.) yaskawaData : This will store Yaskawa Torque, Temperatures and Position Values\n    //2.) yaskawaHealth : This will store Yaskawa health Values\n    //3.) kukaData : This will store Yaskawa Torque, Temperatures and Position Values\n    //4.) kukaHealth : This is store Kuka health values\n    //5.) replayData :\n    //6.) replayHealth :\n\n    state = {\n        pmHealthData:[0]\n    };\n\n    wsCredentials = {\n        \"yaskawa\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n    ws = null;\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        switch(this.props.robot){\n            \n        case \"yaskawa\": \n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/yaskawaHistory\").then((response) => {\n                let yaskawaHistory = response.data.yaskawaHistory.map((element) => {\n                    // console.log(JSON.parse(element));\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: yaskawaHistory });\n            });\n            break;\n        case \"kuka\":\n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/kukaHistory\").then((response) => {\n                let kukaHistory = response.data.kukaHistory.map((element) => {\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: kukaHistory });\n            });\n            break;\n        case \"replay\":\n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/replayHistory\").then((response) => {\n                let replayHistory = response.data.replayHistory.map((element) => {\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: replayHistory });\n            });\n            break;\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.ws) {\n            this.ws.close();\n        }\n    }\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n        this.ws = ws;\n        ws.onmessage = (event) => {\n            let msg = JSON.parse(event.data);\n            msg = msg.payload === undefined ? msg : msg.payload;\n            console.log(msg);\n\n            switch(msg.msgType){\n\n            case \"yaskawaTorqueTemp\": \n            case \"kukaTorqueTemp\":\n            case \"kukaTorque\":   \n                console.log(msg);\n                this.setState({\n                    pmData: [...this.state.pmData, msg]\n                });\n            break;\n            case \"yaskawaRobotHealth\":\n            case \"kukaRobotHealth\": \n                // console.log(\"10\",msg.health.values[0][10]);\n                this.setState({\n                    pmHealthData: [...this.state.pmHealthData, msg.overallHealth]\n                });\n            break;\n            // case \"repl\"\n\n            }\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        ws.onclose = () => {\n            setTimeout(this.webSocketHandler, 3000);\n        }\n    }\n\n    render() {\n\n        let pmComponent = <PMContainer pmData={this.state.pmData} pmHealthData={this.state.pmHealthData} />;\n\n        return (\n                <BasicCard>\n                    <div><h1>{this.props.robot}</h1></div>\n                    <div className=\"pmDataContainer\">\n                        {pmComponent}\n                    </div>\n                </BasicCard>\n        );\n    }\n}\n\nexport default PMDashboard;","import React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\n\nconst header = (props) => (\n    <div className=\"Header\">\n        <Link to=\"/\">\n            <div>\n                <button>arrow</button>\n            </div>\n        </Link>\n        <div>{props.role}</div>\n    </div>\n);\n\nexport default header;\n\n","import React from 'react';\nimport './sideBar.css';\n\nconst sideBar = () => (\n    <div className=\"sideBar\">\n    </div>\n);\n\nexport default sideBar;","import React from 'react';\nimport './screenContents.css';\n\nconst screenContents = (props) => (\n    <div className=\"screenContents\">\n    {props.children}\n    </div>\n);\n\nexport default screenContents;","import React from 'react';\nimport './screenTop.css';\n\nconst screenTop = (props) => {\n    return(\n        <div className='screenTop'>\n        {props.children}\n        </div>\n    );\n}\n\nexport default screenTop;","import React from 'react';\nimport './layout.css';\nimport Header from './Header/header';\nimport SideBar from './SideBar/sideBar';\nimport ScreenContents from './ScreenContents/screenContents';\nimport ScreenTop from './ScreenTop/screenTop';\nimport Aux from '../Aux/Aux';\n\nconst layout = (props) => (\n    <div className='layout'>\n        <Header role={props.role} />\n        <SideBar />\n        <ScreenTop>\n            {props.screenTop}\n        </ScreenTop>\n        <ScreenContents>\n            {props.content}\n        </ScreenContents>\n        <div className='rightBar'></div>\n        <div className='footer'>Watson IoT</div>\n    </div>\n);\n\nexport default layout;","import React, { Component } from 'react';\n//import Header from '../../common-ui/persona-header/persona-header';\nimport PersonaEnv from '../../common-ui/personaEnv/personaEnv';\nimport RobotList from '../../common-ui/robot-list/robot-list';\nimport Aux from '../../common-ui/Aux/Aux';\nimport PMDashboard from './predictive-maintenance-dashboard/PMDashboard';\nimport Layout from '../../common-ui/Layout/layout';\n// import { Client } from './node_modules/paho-mqtt';\nimport './PM.css';\n\n\nclass PredictiveMaintenance extends Component {\n\n    state = {\n        pmDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            pmDashboard: true,\n            robotEnvironment: event.target.value\n        });\n    }\n\n    getMainContent = () => {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let pmContent = \"\";\n\n        if (this.state.pmDashboard) {\n            pmContent = <PMDashboard robot={this.state.robotEnvironment}/>\n        } else {\n            pmContent =\n                    <RobotList clickHandler={this.robotClickHandler} />\n        }\n\n        let PredictiveMaintenance = (<div className=\"PredicitiveMaintenance\" >\n                                    {pmContent}\n                             </div>);\n\n         return PredictiveMaintenance;\n    }\n\n    getPersonaEnv = () => {\n        let PersonaorPath = \"\";\n\n        if (this.state.pmDashboard) {\n            PersonaorPath = <div>Dashboard > {this.state.robotEnvironment}</div>\n        } else {\n            PersonaorPath = <PersonaEnv name = \"Mark\"  />\n        }\n\n        return PersonaorPath;\n    }\n\n    render() {\n\n        let PredictiveMaintenance = this.getMainContent();\n        let PersonaEnv = this.getPersonaEnv();\n        return (\n\n            <Layout\n                role=\"Manufacturing Line Manager\"\n                screenTop = {PersonaEnv}\n                content={PredictiveMaintenance}\n            />\n\n        );\n    }\n}\n\nexport default PredictiveMaintenance;\n","import React from 'react';\nimport BasicCard from '../../../common-ui/BasicCard/basicCard';\nimport './lineList.css';\n\nconst lineList = (props) => {\n    \n    const assignments = [\n        {line: 3, name: \"kuka\", imgSrc: \"img\", imgNum: 138},\n        {line: 7, name: \"yaskawa\", imgSrc: \"img\", imgNum: 76},\n        {line: 2, name: \"replay\", imgSrc: \"img\", imgNum: 1982}\n    ];\n\n    let line_list = assignments.map(a => {\n        return(\n            <BasicCard classname=\"lineList-BasicCard\" key={a.name}>\n                <div className=\"line_contents\">\n                <div>Re-Inspection</div>\n                <div className=\"line\">Line{\" \"+a.line}</div>\n                <div>{a.name}</div>\n                <div>{a.imgSrc}</div>\n                <div className=\"spanStyle\">\n                    <span>{a.imgNum+\" \"} Images</span>\n                    <span>\n                        <button value={a.name} onClick={props.clickHandler}>arrow</button>\n                    </span>\n                </div>\n                </div>\n            </BasicCard>\n        );\n    });\n\n    return (\n        <div className = \"lineList\">\n            {line_list}\n        </div>\n    );\n}\n\nexport default lineList;","import React, { PureComponent } from 'react';\n// import Aux from '../../../../common-ui/Aux/Aux';\nimport BasicCard from '../../../../common-ui/BasicCard/basicCard';\nimport './viContainer.css';\n\nclass ImgContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        img: null\n\n    }\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    static getDerivedStateFromProps = (props, state) => {\n        return {\n            slot: props.slot,\n            img: props.img\n        }\n\n    }\n\n    renderImage = () => {\n        let viImg = <p>No image </p>\n        let imgs = null;\n\n        if (this.state.img) {\n            let viImgStyle = \"url(data:image/jpeg;base64,\" + this.state.img + \")\";\n            imgs = {\n                backgroundImage: viImgStyle,\n                backgroundRepeat: \"no-repeat\",\n                width: \"100%\",\n                height: \"100%\",\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\"\n            }\n\n            viImg = <div style={imgs} ></div>\n        }\n\n        return viImg;\n    }\n\n    render() {\n\n        return (\n            <BasicCard classname=\"img-BasicCard\">\n            <div className=\"imgContainer background\" >\n                {this.renderImage()}\n            </div>\n            </BasicCard>\n        );\n    }\n}\n\n\nexport default ImgContainer;","import React, { PureComponent } from 'react';\nimport Aux from '../../../../common-ui/Aux/Aux';\nimport BasicCard from '../../../../common-ui/BasicCard/basicCard';\nimport './viContainer.css';\n\nclass ScoreContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        score: null\n    }\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            slot: props.slot,\n            score: props.score\n        }\n\n    }\n\n    renderScore = () => {\n        let score = <p>No score </p>\n        if (this.state.score) {\n            let confidence_style =\n                {\n                    width: this.state.score[2] + '%',\n                    backgroundColor: '#0062FF'\n                };\n\n            score =\n                <div className=\"scoreContents\">\n                    {/* <div>iotTopic:  {this.state.score[0]}</div> */}\n                    <div>Environment:  {this.state.score[0]}</div>\n                    <div>Classification: {this.state.score[1]}</div>\n                    <div className=\"confidenceContainer\">\n                        <div>\n                            Confidence:{this.state.score[2]}\n                        </div>\n                        {/* <div className=\"confidenceBarContainer\"> */}\n                        <div className=\"confidenceBar\">\n                            <div style={confidence_style}></div>\n                        </div>\n                        {/* </div> */}\n                    </div>\n                    <div>Slot:  {this.state.score[3]}</div>\n                    <div>Is this correct?</div>\n                </div>\n        }\n        return score;\n    }\n\n    renderValidation = () => {\n        let validate = null;\n        if (this.state.score) {\n            validate =\n                <Aux>\n                    <div className=\"noButton\">No</div>\n                    <div className=\"yesButton\">Yes</div>\n                </Aux>\n        }\n        return validate;\n    }\n\n    render() {\n        return (\n            <div className=\"scoreValidateContainer\">\n                <BasicCard classname=\"score-BasicCard\">\n                    <div className=\"scoreContainer\" >\n                        {this.renderScore()}\n                    </div>\n                </BasicCard>\n                <BasicCard classname=\"validateContainer\">\n                    {this.renderValidation()}\n                </BasicCard>\n            </div>\n        );\n    }\n}\n\n\nexport default ScoreContainer;","import React, { Component } from 'react';\nimport Aux from '../../../common-ui/Aux/Aux';\nimport ImgContainer from './viContainer/imgContainer';\nimport ScoreContainer from './viContainer/scoreContainer';\nimport BasicCard from '../../../common-ui/BasicCard/basicCard';\nimport { Client } from 'paho-mqtt';\nimport './vidashboard.css';\n\nclass videtails extends Component {\n\n    state = {\n        mqttClient: null,\n        imgdata: [\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null }\n        ],\n        scoredata: [\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null }\n        ]\n    }\n\n    // mqttCredentials = [\n    //     {\n    //         clientId: 'a:qjue4x:' + Math.random().toString(16).substr(2, 8),\n    //         broker: \"qjue4x.messaging.internetofthings.ibmcloud.com\",\n    //         subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n    //         username: \"a-qjue4x-al7mm3hvo4\",\n    //         password: \"+4B0N)ZGk@BVH1BFy9\"\n\n    //     },\n    //     {\n    //         clientId: 'a:xbyrsp:' + Math.random().toString(16).substr(2, 8),\n    //         broker: \"xbyrsp.messaging.internetofthings.ibmcloud.com\",\n    //         subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n    //         username: \"a-xbyrsp-0rf3yixsqn\",\n    //         password: \"2I+?sdkfxml_OR8SMR\"\n\n    //     }\n    // ]\n    //required if web sockets are different for different devices\n    wsCredentials = {\n        \"yaskawa\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n\n    ws = null;\n\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        //this.mqttHandler(this.props.robot);\n    };\n\n    componentWillUnmount() {\n        console.log(\"componentWillUnmount\");\n        if (this.ws) {\n            this.ws.close();\n            console.log(\"YES! - componentWillUnmount\");\n\n        }\n    }\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n        this.ws = ws;\n        ws.onmessage = (event) => {\n            // parse the incoming message as a JSON object\n            let msg = JSON.parse(event.data);\n            // if (msg.msgType === undefined) {\n            //     msg = msg.payload;\n            //     console.log(\"msg.msgType undefined\");\n            // } else {\n            //     console.log(\"msg.msgType: \" + msg.msgType);\n            // }\n\n            console.log(\"props: \" + this.props.robot + \" msg: \");\n            console.log(msg);\n           // if ((msg.msgType !== \"yaskawaTorqueTemp\") && (msg.msgType !== \"yaskawaRobotHealth\")) {\n                //debugger;\n\n                if (msg.msgType === \"image\" && msg.robotSource === this.props.robot) {\n                    let slot = msg.slot;\n\n                    console.log(\"ws image msg.payload.robotEnvironment=\" + msg.robotSource);\n                    let roboImg = msg.image.toString();\n                    let imgdata = this.state.imgdata;\n                    imgdata[slot - 1].slot = slot;\n                    imgdata[slot - 1].img = roboImg;\n\n                    this.setState({\n                        imgdata: imgdata\n                    }, () => {\n                        console.log(\"viIMAGE - Parent\");\n                        console.log(this.state);\n                    });\n                }\n\n\n                //below line is required only if ws socket is the same        \n                // if (this.props.robot === msg.payload.robotEnvironment) {\n                else if (msg.type === \"scoring\" && msg.robotSource === this.props.robot) {\n                    console.log(\"Score MSG\");\n                    console.log(msg);\n                    let score = [msg.robotSource, msg.speakingClassification, msg.confidence, msg.slot];\n                    let cur_scoredata = this.state.scoredata;\n                    cur_scoredata[msg.slot - 1].score = score;\n                    cur_scoredata[msg.slot - 1].slot = msg.slot;\n\n                    this.setState({\n                        scoredata: cur_scoredata\n                    });\n\n                    // // let myTopic = message.destinationName;\n                    // // let parsedTopic = myTopic.split(\"/\");\n                    // let deviceId = parsedTopic[4];\n                    // let valueCmdEvt = parsedTopic[6];\n                    // let textJson = parsedTopic[8];\n\n                    // if (textJson === \"json\") {\n                    //     let iotPayload = JSON.parse(message.payloadString);\n\n                    //     if (valueCmdEvt === \"score\") {\n                    //         let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n                    //         let cur_scoredata = this.state.scoredata;\n                    //         cur_scoredata[iotPayload.slot - 1].score = score;\n                    //         cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n                    //         this.setState({\n                    //             scoredata: cur_scoredata\n                    //         });\n\n                    //     }\n                    // }\n\n                }\n            // }\n            // }\n\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        // ws.onclose = () => {\n        //     setTimeout(this.webSocketHandler, 3000);\n        // }\n    }\n\n    // mqttHandler = (device) => {\n\n    //     let mqtt_clientId = null;\n    //     let mqtt_broker = null;\n    //     let mqtt_username = null;\n    //     let mqtt_password = null;\n\n\n\n    //     switch (device) {\n    //         case 'yaskawa001':\n    //             mqtt_clientId = this.mqttCredentials[0].clientId;\n    //             mqtt_broker = this.mqttCredentials[0].broker;\n    //             mqtt_username = this.mqttCredentials[0].username;\n    //             mqtt_password = this.mqttCredentials[0].password;\n    //             // debugger;\n    //             break;\n\n    //         case 'kuka001':\n    //             mqtt_clientId = this.mqttCredentials[1].clientId;\n    //             mqtt_broker = this.mqttCredentials[1].broker;\n    //             mqtt_username = this.mqttCredentials[1].username;\n    //             mqtt_password = this.mqttCredentials[1].password;\n    //             // console.log(\"switch - device -\" + device);\n    //             break;\n\n    //         case 'replay':\n    //             mqtt_clientId = this.mqttCredentials[0].clientId;\n    //             mqtt_broker = this.mqttCredentials[0].broker;\n    //             mqtt_username = this.mqttCredentials[0].username;\n    //             mqtt_password = this.mqttCredentials[0].password;\n    //             // console.log(\"switch - device -\" + device);\n    //             break;\n\n    //         // case 'default': \n    //         // mqtt_clientId = this.mqttCredentials[0].clientId;\n    //         // mqtt_broker = this.mqttCredentials[0].broker;\n    //         // mqtt_username = this.mqttCredentials[0].username;\n    //         // mqtt_password = this.mqttCredentials[0].password;\n\n    //     }\n    //     // Create a client instance\n    //     let mqtt_client = new Client(mqtt_broker, 1883, mqtt_clientId);\n\n    //     // set callback handlers\n    //     mqtt_client.onConnectionLost = this.onConnectionLost;\n    //     mqtt_client.onMessageArrived = this.onMessageArrived;\n\n    //     this.setState({\n    //         mqttClient: mqtt_client\n    //     }, () => {\n    //         this.state.mqttClient.connect({\n    //             onSuccess: this.onConnect,\n    //             onFailure: this.onFailure,\n    //             userName: mqtt_username,   // apikey\n    //             password: mqtt_password\n    //         })\n    //     })\n\n    // }\n\n    // // called when the client loses its connection\n    // onConnectionLost = (responseObject) => {\n    //     if (responseObject.errorCode !== 0) {\n    //         console.log(\"onConnectionLost:\" + responseObject.errorMessage);\n    //     }\n    // }\n\n    // onMessageArrived = (message) => {\n    //     console.log(\"inside onMessage 2\");\n    //     this.onMessageArrivedCommon(message);\n    // }\n\n    // onConnect = (props) => {\n    //     // Once a connection has been made, make a subscription and send a message.\n    //     let subscribeString = null;\n    //     switch (this.props.robot) {\n    //         case 'yaskawa001':\n    //             subscribeString = this.mqttCredentials[0].subscribe;\n    //             console.log(\"switch - subscribe -\" + this.props.robot);\n    //             break;\n\n    //         case 'kuka001':\n    //             subscribeString = this.mqttCredentials[0].subscribe;\n    //             console.log(\"switch - subscribe -\" + this.props.robot);\n    //             break;\n\n    //         case 'replay':\n    //             subscribeString = this.mqttCredentials[0].subscribe;\n    //             console.log(\"switch - subscribe -\" + this.props.robot);\n    //             break;\n    //     }\n    //     console.log(\"onConnect\");\n    //     this.state.mqttClient.subscribe(subscribeString);\n    // }\n\n    // onFailure = (responseObject) => {\n    //     // Once a connection has been made, make a subscription and send a message.\n    //     console.log(\"onFailure\" + JSON.stringify(responseObject));\n    // }\n\n    // // called when a message arrives\n    // onMessageArrivedCommon = (message) => {\n\n    //     let myTopic = message.destinationName;\n    //     let parsedTopic = myTopic.split(\"/\");\n    //     let deviceId = parsedTopic[4];\n    //     let valueCmdEvt = parsedTopic[6];\n    //     let textJson = parsedTopic[8];\n\n    //     if (textJson === \"json\") {\n    //         let iotPayload = JSON.parse(message.payloadString);\n    //         console.log(\"wholedata\",valueCmdEvt,iotPayload);\n\n    //         if (valueCmdEvt === \"score\") {\n    //             let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n    //             let cur_scoredata = this.state.scoredata;\n    //             cur_scoredata[iotPayload.slot - 1].score = score;\n    //             cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n    //             this.setState({\n    //                 scoredata: cur_scoredata\n    //             });\n\n    //         }\n    //     }\n\n    // }\n\n    getImgComponent = () => {\n        let imgComponent = this.state.imgdata.map((s, i) => {\n\n            return (<ImgContainer\n                img={s.img}\n                slot={s.slot}\n                key={i} />);\n        });\n\n        return imgComponent;\n    }\n\n    getScoreComponent = () => {\n        let scoreComponent = this.state.scoredata.map((s, i) => {\n\n            return (\n                <ScoreContainer\n                    slot={s.slot}\n                    score={s.score}\n                    key={i} />\n            );\n        });\n\n        return scoreComponent;\n    }\n\n    render(props) {\n\n        let imgComponent = this.getImgComponent();\n\n        let scoreComponent = this.getScoreComponent();\n\n        return (\n            <div className=\"dashboardContainer\">\n                {/* <div>{this.props.robot}</div> */}\n                <div className=\"imgScoreContainer\">\n                    {imgComponent}\n                </div>\n                <div className=\"imgScoreContainer\">\n                    {scoreComponent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default videtails;","import React, { Component } from 'react';\n//import Header from '../../common-ui/persona-header/persona-header';\nimport PersonaEnv from '../../common-ui/personaEnv/personaEnv';\nimport LineList from './lineList/lineList';\nimport Aux from '../../common-ui/Aux/Aux';\nimport VIdashboard from './visual-insights-dashboard/vidashboard';\nimport Layout from '../../common-ui/Layout/layout';\n// import { Client } from 'paho-mqtt';\nimport './vi.css';\n\nclass VisualInsights extends Component {\n\n    state = {\n        viDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            viDashboard: true,\n            robotEnvironment: event.target.value\n        });\n        console.log(event.target.value);\n    }\n\n    // backArrowHandler = () => {\n    //     this.setState({\n    //         viDashboard: false,\n    //         robotEnvironment: null\n    //     });\n    // }\n\n    getMainContent = () => {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let viContent = \"\";\n        let PersonaorPath = \"\";\n\n        // if (this.state.viDashboard) {\n        //     // console.log(\"inside IF\");\n        //     // console.log(this.state.imgMsg);\n        //     viContent =\n        //         <VIdashboard robot={this.state.robotEnvironment} />\n        // } else {\n        //     viContent =\n        //         <Aux>\n        //             <div className=\"persona-section\">\n        //                 <PersonaTime name=\"Carla\" />\n        //                 <div style={temp_style}> Assigned to line 3 today</div>\n        //             </div>\n        //             <RobotList clickHandler={this.robotClickHandler} />\n        //         </Aux>\n        // }\n\n        if (this.state.viDashboard) {\n            // console.log(\"inside IF\");\n            // console.log(this.state.imgMsg);\n           \n            viContent =\n                <VIdashboard robot={this.state.robotEnvironment} />\n        } else {\n            \n            viContent =\n                // <Aux>\n                //     <div className=\"persona-section\">\n                //         <PersonaTime name=\"Carla\" />\n                //         <div style={temp_style}> Assigned to line 3 today</div>\n                //     </div>\n                <Aux>\n                    <div className = \"tabs\">\n                    <div className=\"cur_assignment\">Current Assignments</div>\n                    <div className=\"past_assignment\">Past Assignments</div>\n                    </div>\n                    <LineList clickHandler={this.robotClickHandler} />\n                </Aux>\n                    \n                // </Aux>\n        }\n        \n\n        let visualInsights = (<div className=\"VisualInsights\" >\n                                    {viContent}\n                             </div>);\n\n        return visualInsights;\n    }\n\n    getPersonaEnv = () => {\n        let PersonaorPath = \"\";\n\n        if (this.state.viDashboard) {\n            PersonaorPath = <div>Dashboard > {this.state.robotEnvironment}</div>\n        } else {\n            PersonaorPath = <PersonaEnv name = \"Carla\"  />\n        }\n\n        return PersonaorPath;\n    }\n\n    render() {\n\n        let visualInsights = this.getMainContent();\n        let PersonaEnv = this.getPersonaEnv();\n\n        return (\n\n            <Layout\n                role=\"Quality Assurance\"\n                screenTop = {PersonaEnv}\n                content={visualInsights}\n            />\n\n\n\n        );\n    }\n}\n\nexport default VisualInsights;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Persona from \"../components/screens/persona\";\nimport PredictiveMaintenance from \"../components/screens/predictive-maintenance\";\nimport VisualInsights from \"../components/screens/visual-insights\";\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Persona} />\n          <Route path=\"/pm\" component={PredictiveMaintenance} />\n          <Route path=\"/vi\" component={VisualInsights} />\n          {/* <Route path=\"/contact\" component={Contact} />\n          <Route component={Notfound} /> */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport \"./styles/App.css\";\n\n// IN THIS FILE :\n// a. site wide styles\n// b. site wide settings such Redux, etc.\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}