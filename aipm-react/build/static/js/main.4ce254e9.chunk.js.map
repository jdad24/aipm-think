{"version":3,"sources":["assets/carla.png","assets/mark.png","components/screens/persona/card/Card.js","components/screens/persona/index.js","components/screens/predictive-maintenance/index.js","components/common-ui/persona-header/persona-header.js","components/common-ui/persona-time/persona-time.js","components/common-ui/robot-list/robot-list.js","components/common-ui/Aux/Aux.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/imgContainer.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/scoreContainer.js","components/screens/visual-insights/visual-insights-dashboard/vidashboard.js","components/screens/visual-insights/index.js","router/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","title","backside","post","tool","imgurl","mark","redirect","redirectText","carla","FlipCard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","id","cardId","concat","setState","defineProperty","state","isFlipped0","isFlipped1","isFlipped2","personas","bind","assertThisInitialized","_this2","react_default","a","createElement","className","map","i","j","console","log","currentCard","react_card_flip_default","isFlipped","key","src","onClick","react_router_dom","to","Component","Persona","Card","PredictiveMaintenance","header","props","role","personatime","name","robotList","device","overview","r","value","clickHandler","aux","children","ImgContainer","slot","img","imgs","backgroundImage","backgroundRepeat","width","height","backgroundSize","backgroundPosition","style","PureComponent","getDerivedStateFromProps","ScoreContainer","score","videtails","mqttClient","imgdata","scoredata","mqttCredentials","clientId","Math","random","toString","substr","broker","subscribe","username","password","wsCredentials","yaskawa001","kuka001","replay","webSocketHandler","ws","wsUri","robot","WebSocket","onmessage","event","msg","JSON","parse","msgType","payload","robotEnvironment","type","roboImg","image","onopen","onclose","setTimeout","mqttHandler","mqtt_clientId","mqtt_broker","mqtt_username","mqtt_password","mqtt_client","Client","onConnectionLost","onMessageArrived","connect","onSuccess","onConnect","onFailure","userName","responseObject","errorCode","errorMessage","message","onMessageArrivedCommon","subscribeString","stringify","parsedTopic","destinationName","split","deviceId","valueCmdEvt","iotPayload","payloadString","speakingClassification","confidence","cur_scoredata","imgComponent","s","imgContainer","scoreComponent","scoreContainer","VisualInsights","viDashboard","robotClickHandler","target","viContent","visual_insights_dashboard_vidashboard","Aux","persona_time_persona_time","border","padding","margin","robot_list_robot_list","persona_header_persona_header","AppRouter","react_router","exact","path","component","App","router_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ce254e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carla.122e76ac.png\";","module.exports = __webpack_public_path__ + \"static/media/mark.d73d5003.png\";","import React, { Component } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport carla from \"../../../../assets/carla.png\"; // with import\nimport mark from \"../../../../assets/mark.png\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\n\nconst data = [\n  {\n    title: \"Mark\",\n    backside: \"Mark is Manufacturing Line Manager \",\n    post: \"Manufacturing Line Manager\",\n    tool: \"Predictive Maintanance\",\n    imgurl: mark,\n    redirect: \"/pm\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  }\n];\n\nclass FlipCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isFlipped0: false,\n      isFlipped1: false,\n      isFlipped2: false,\n      personas: data\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //handleClick(e) {\n  // e.preventDefault();\n  // this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n  //}\n\n  handleClick = id => () => {\n    const cardId = `isFlipped${id}`;\n    this.setState({ [cardId]: !this.state[cardId] });\n    // console.log(cardId);\n  };\n\n  render() {\n    return (\n      <div className=\"cards\">\n        {this.state.personas.map((i, j) => {\n          console.log(j);\n          let currentCard = `isFlipped${j}`;\n          return (\n            <div className=\"card\">\n              <ReactCardFlip isFlipped={this.state[currentCard]}>\n                <div key=\"front\" className=\"mycard\">\n                  <img src={i.imgurl} onClick={this.handleClick(j)} />\n                  <div className=\"frontText\">\n                    <div className=\"frontTitle\"> {i.title}</div>\n                    {i.post}\n                  </div>\n                  <div className=\"frontText\">\n                    <br />\n                    {i.tool}\n                  </div>\n                </div>\n\n                <div\n                  onClick={this.handleClick(j)}\n                  key=\"back\"\n                  className=\"mycard\"\n                >\n                  <div className=\"text\">{i.backside}</div>\n                </div>\n              </ReactCardFlip>\n              <Link to={i.redirect}>\n                <div className=\"frontText2\">\n                  <br />\n                  {i.redirectText} <span>&#8594;</span>\n                </div>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default FlipCard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FlipCard from \"../persona/card/Card\";\nimport \"./index.css\";\n\nclass Persona extends Component {\n  render() {\n    return (\n      <div className=\"parent\">\n        <div className=\"P1\">\n          <h1>AI Powered Manufacturing with Watson IoT</h1>\n        </div>\n\n        <div className=\"P2\">\n          <FlipCard />\n        </div>\n        <div className=\"P3\">\n          <h1>Watson IoT</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Persona;\n","import React, { Component } from \"react\";\n\nclass PredictiveMaintenance extends Component {\n  render() {\n    return <div> PredictiveMaintenance </div>;\n  }\n}\n\nexport default PredictiveMaintenance;\n","import React from 'react';\nimport './persona-header.css';\nimport { Link } from 'react-router-dom';\n\nconst header = (props) => (\n    <div className=\"Header\">\n        <Link to=\"/\">\n            <div>\n                <button>arrow</button>\n            </div>\n        </Link>\n        <div>{props.role}</div>\n    </div>\n);\n\nexport default header;\n\n","import React from 'react';\nimport './persona-time.css';\n\nconst personatime = (props) => {\n\n    return (\n        <div className=\"Persona-time\">\n            <div>Good-morning {props.name}</div>\n            <div>Local Time, Date</div>\n            <div>Weather and Weather Event</div>\n        </div>\n    );\n\n}\n\nexport default personatime;","import React from 'react';\nimport './robot-list.css';\nimport { Link } from \"react-router-dom\";\n\nconst robotList = (props) => {\n    const robots = [\n        { device: \"yaskawa001\", overview: \" Yaskawa Overview\" },\n        { device: \"kuka001\", overview: \" Kuka Overview\" },\n        { device: \"replay\", overview: \" Replay Overview\" }\n    ]\n\n    let robotList = robots.map(r => {\n        return (\n            <div className=\"Robot\" key={r.device}>\n                <div>{r.device}</div>\n                <div>{r.overview}</div>\n                {/* <Link to=\"/pm\"> */}\n                    <button value={r.device} onClick={props.clickHandler}>Details</button>\n                {/* </Link> */}\n                {/* <button onClick={props.onclick}>Details</button> */}\n            </div>\n        );\n    })\n\n    return (\n        <div className=\"Robot-list\">\n            {robotList}\n        </div>\n    );\n}\n\nexport default robotList;","import React from 'react';\n\nconst aux = (props) => {\n    return props.children;\n}\n\nexport default aux;","import React, { PureComponent } from 'react';\nimport Aux from '../../../../common-ui/Aux/Aux';\nimport './viContainer.css';\n\nclass ImgContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        img: null\n\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        return {\n            slot: props.slot,\n            img: props.img\n        }\n\n    }\n\n    render() {\n\n        let viImg = \"url(data:image/jpeg;base64,\" + this.state.img + \")\";\n        let imgs = {\n            backgroundImage: viImg,\n            backgroundRepeat: \"no-repeat\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundSize: \"contain\",\n            backgroundPosition: \"center\"\n        }\n\n\n        return (\n            <div className=\"imgContainer\" >\n                <div style={imgs} >image: </div>\n            </div>\n        );\n    }\n}\n\n\nexport default ImgContainer;","import React, { PureComponent } from 'react';\nimport Aux from '../../../../common-ui/Aux/Aux';\nimport './viContainer.css';\n\nclass ScoreContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        score: null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            slot: props.slot,\n            score: props.score\n        }\n\n    }\n\n    render() {\n\n        let score = <p>No score </p>\n        if (this.state.score) {\n            score = <div>Score:\n            <div>iotTopic:  {this.state.score[0]}</div>\n                <div>robotEnvironment:  {this.state.score[0]}</div>\n                <div>mySpeakingClassification:  {this.state.score[1]}</div>\n                <div>myConfidence:  {this.state.score[2]}</div>\n                <div>mySlot:  {this.state.score[3]}</div>\n            </div>\n        }\n\n        return (\n            <div className=\"scoreContainer\" >\n                {score}\n            </div>\n        );\n    }\n}\n\n\nexport default ScoreContainer;","import React, { Component } from 'react';\nimport Aux from '../../../common-ui/Aux/Aux';\nimport ImgContainer from './viContainer/imgContainer';\nimport ScoreContainer from './viContainer/scoreContainer';\nimport { Client } from 'paho-mqtt';\nimport './vidashboard.css';\n\nclass videtails extends Component {\n\n    state = {\n        mqttClient: null,\n        imgdata: [\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null }\n        ],\n        scoredata: [\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null }\n        ]\n    }\n\n    mqttCredentials = [\n        {\n            clientId: 'a:qjue4x:' + Math.random().toString(16).substr(2, 8),\n            broker: \"qjue4x.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-qjue4x-al7mm3hvo4\",\n            password: \"+4B0N)ZGk@BVH1BFy9\"\n\n        },\n        {\n            clientId: 'a:xbyrsp:' + Math.random().toString(16).substr(2, 8),\n            broker: \"xbyrsp.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-xbyrsp-0rf3yixsqn\",\n            password: \"2I+?sdkfxml_OR8SMR\"\n\n        }\n    ]\n    //required if web sockets are different for different devices\n    wsCredentials = {\n        \"yaskawa001\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka001\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        this.mqttHandler(this.props.robot);\n    };\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n\n        ws.onmessage = (event) => {\n            // parse the incoming message as a JSON object\n            let msg = JSON.parse(event.data);\n            if ((msg.msgType != \"yaskawaTorqueTemp\") && (msg.msgType != \"yaskawaRobotHealth\")) {\n                debugger;\n                let slot = msg.payload.slot;\n\n                //below line is required only if ws socket is the same        \n                if (this.props.robot === msg.payload.robotEnvironment) {\n                    if (msg.payload.type === \"image\") {\n                        console.log(\"ws image msg.payload.robotEnvironment=\" + msg.payload.robotEnvironment);\n                        let roboImg = msg.payload.image.toString();\n                        let imgdata = this.state.imgdata;\n                        imgdata[slot - 1].slot = slot;\n                        imgdata[slot - 1].img = roboImg;\n    \n                        this.setState({\n                            imgdata: imgdata\n                        }, () => {\n                            console.log(\"viIMAGE - Parent\");\n                            console.log(this.state);\n                        });\n                    }\n                }\n            }\n\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        ws.onclose = () => {\n            setTimeout(this.webSocketHandler, 3000);\n        }\n    }\n\n    mqttHandler = (device) => {\n\n        let mqtt_clientId = null;\n        let mqtt_broker = null;\n        let mqtt_username = null;\n        let mqtt_password = null;\n\n\n\n        switch (device) {\n            case 'yaskawa001':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                // debugger;\n                break;\n\n            case 'kuka001':\n                mqtt_clientId = this.mqttCredentials[1].clientId;\n                mqtt_broker = this.mqttCredentials[1].broker;\n                mqtt_username = this.mqttCredentials[1].username;\n                mqtt_password = this.mqttCredentials[1].password;\n                console.log(\"switch - device -\" + device);\n                break;\n\n            case 'replay':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                console.log(\"switch - device -\" + device);\n                break;\n\n        }\n        // Create a client instance\n        let mqtt_client = new Client(mqtt_broker, 1883, mqtt_clientId);\n\n        // set callback handlers\n        mqtt_client.onConnectionLost = this.onConnectionLost;\n        mqtt_client.onMessageArrived = this.onMessageArrived;\n\n        this.setState({\n            mqttClient: mqtt_client\n        }, () => {\n            this.state.mqttClient.connect({\n                onSuccess: this.onConnect,\n                onFailure: this.onFailure,\n                userName: mqtt_username,   // apikey\n                password: mqtt_password\n            })\n        })\n\n    }\n\n    // called when the client loses its connection\n    onConnectionLost = (responseObject) => {\n        if (responseObject.errorCode !== 0) {\n            console.log(\"onConnectionLost:\" + responseObject.errorMessage);\n        }\n    }\n\n    onMessageArrived = (message) => {\n        console.log(\"inside onMessage 2\");\n        this.onMessageArrivedCommon(message);\n    }\n\n    onConnect = (props) => {\n        // Once a connection has been made, make a subscription and send a message.\n        let subscribeString = null;\n        switch (this.props.robot) {\n            case 'yaskawa001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'kuka001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'replay':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n        }\n        console.log(\"onConnect\");\n        this.state.mqttClient.subscribe(subscribeString);\n    }\n\n    onFailure = (responseObject) => {\n        // Once a connection has been made, make a subscription and send a message.\n        console.log(\"onFailure\" + JSON.stringify(responseObject));\n    }\n\n    // called when a message arrives\n    onMessageArrivedCommon = (message) => {\n\n        let myTopic = message.destinationName;\n        let parsedTopic = myTopic.split(\"/\");\n        let deviceId = parsedTopic[4];\n        let valueCmdEvt = parsedTopic[6];\n        let textJson = parsedTopic[8];\n\n        if (textJson === \"json\") {\n            let iotPayload = JSON.parse(message.payloadString);\n\n            if (valueCmdEvt === \"score\") {\n                let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n                let cur_scoredata = this.state.scoredata;\n                cur_scoredata[iotPayload.slot - 1].score = score;\n                cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n                this.setState({\n                    scoredata: cur_scoredata\n                });\n\n            }\n        }\n\n    }\n\n    render(props) {\n\n        let imgComponent = this.state.imgdata.map((s, i) => {\n\n            return (<ImgContainer\n                img={s.img}\n                slot={s.slot}\n                key={i} />);\n        });\n\n        let scoreComponent = this.state.scoredata.map((s, i) => {\n\n            return (\n                <ScoreContainer\n                    slot={s.slot}\n                    score={s.score}\n                    key={i} />\n            );\n        });\n\n        return (\n            <div className=\"dashboardContainer\">\n                <div>{this.props.robot}</div>\n                <div className=\"imgScoreContainer\">\n                    {imgComponent}\n                </div>\n                <div className=\"imgScoreContainer\">\n                    {scoreComponent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default videtails;","import React, { Component } from 'react';\nimport Header from '../../common-ui/persona-header/persona-header';\nimport PersonaTime from '../../common-ui/persona-time/persona-time';\nimport RobotList from '../../common-ui/robot-list/robot-list';\nimport Aux from '../../common-ui/Aux/Aux';\nimport VIdashboard from './visual-insights-dashboard/vidashboard';\nimport { Client } from 'paho-mqtt';\nimport './vi.css';\n\nclass VisualInsights extends Component {\n\n    state = {\n        viDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            viDashboard: true,\n            robotEnvironment: event.target.value\n        });\n        console.log(event.target.value);\n    }\n\n    render() {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let viContent = \"\";\n\n        if (this.state.viDashboard) {\n            // console.log(\"inside IF\");\n            // console.log(this.state.imgMsg);\n            viContent =\n                <VIdashboard\n                    robot={this.state.robotEnvironment}\n                    // imgMsg={this.state.imgMsg}\n                // scoreMsg = {this.state.scoreMsg} \n                />\n        } else {\n            viContent =\n                <Aux>\n                    <div className=\"persona-section\">\n                        <PersonaTime name=\"Carla\" />\n                        <div style={temp_style}> Assigned to line 3 today</div>\n                    </div>\n                    <RobotList clickHandler={this.robotClickHandler} />\n                </Aux>\n        }\n\n        return (\n\n            <div className=\"VisualInsights\" >\n                <Header role=\"Line Manager Dashboard\" />\n                {viContent}\n                {/* <div className=\"RobotList\">\n                    <div>gm Carla</div>\n                    <div>QA</div>\n                </div> */}\n                {/* <RobotList onclick={this.loadVI}/> */}\n            </div>\n\n        );\n    }\n}\n\nexport default VisualInsights;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Persona from \"../components/screens/persona\";\nimport PredictiveMaintenance from \"../components/screens/predictive-maintenance\";\nimport VisualInsights from \"../components/screens/visual-insights\";\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Persona} />\n          <Route path=\"/pm\" component={PredictiveMaintenance} />\n          <Route path=\"/vi\" component={VisualInsights} />\n          {/* <Route path=\"/contact\" component={Contact} />\n          <Route component={Notfound} /> */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport \"./styles/App.css\";\n\n// IN THIS FILE :\n// a. site wide styles\n// b. site wide settings such Redux, etc.\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}