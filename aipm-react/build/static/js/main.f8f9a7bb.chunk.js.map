{"version":3,"sources":["assets/mark.png","components/screens/persona/card/Card.js","components/screens/persona/index.js","components/common-ui/persona-header/persona-header.js","components/common-ui/persona-time/persona-time.js","components/common-ui/robot-list/robot-list.js","components/common-ui/Aux/Aux.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmcontainer/GraphContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmcontainer/PMTorqueTempContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/pmcontainer/PMContainer.js","components/screens/predictive-maintenance/predictive-maintenance-dashboard/PMDashboard.js","components/screens/predictive-maintenance/index.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/imgContainer.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/scoreContainer.js","components/screens/visual-insights/visual-insights-dashboard/vidashboard.js","components/screens/visual-insights/index.js","router/AppRouter.js","App.js","serviceWorker.js","index.js","assets/carla.png"],"names":["module","exports","__webpack_require__","p","data","title","backside","post","tool","imgurl","mark","redirect","redirectText","carla","FlipCard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","id","cardId","concat","setState","defineProperty","state","isFlipped0","isFlipped1","isFlipped2","personas","bind","assertThisInitialized","_this2","react_default","a","createElement","className","map","i","j","console","log","currentCard","react_card_flip_default","isFlipped","key","src","onClick","react_router_dom","to","Component","Persona","Card","header","props","role","personatime","name","robotList","device","overview","r","value","clickHandler","aux","children","GraphContainer","undefined","xDataKey","dataKey","type","element","temp","tempUpper","Temperatue","tempMiddle","tempLower","xPos","posUpper","X-Position","yPos","posMiddle","Y-Position","zPos","posLower","Z-Position","es6","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","activeDot","PureComponent","PMTorqueTempContainer","pmData","Gauge_default","length","torqueType","color","label","pmcontainer_GraphContainer","tempType","posDirection","getDerivedStateFromProps","PMContainer","pmcontainer_PMTorqueTempContainer","PMDashboard","wsCredentials","yaskawa","kuka","replay","ws","webSocketHandler","wsUri","robot","WebSocket","onmessage","event","msg","JSON","parse","msgType","toConsumableArray","onopen","onclose","setTimeout","axios","get","then","response","yaskawaHistory","kukaHistory","close","pmComponent","predictive_maintenance_dashboard_pmcontainer_PMContainer","PredictiveMaintenance","pmDashboard","robotEnvironment","robotClickHandler","target","pmContent","predictive_maintenance_predictive_maintenance_dashboard_PMDashboard","Aux","persona_time_persona_time","style","border","padding","robot_list_robot_list","persona_header_persona_header","ImgContainer","slot","img","renderImage","viImg","imgs","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","ScoreContainer","score","renderScore","videtails","mqttClient","imgdata","scoredata","mqttCredentials","clientId","Math","random","toString","substr","broker","subscribe","username","password","payload","robotSource","roboImg","image","speakingClassification","confidence","cur_scoredata","mqttHandler","mqtt_clientId","mqtt_broker","mqtt_username","mqtt_password","mqtt_client","Client","onConnectionLost","onMessageArrived","connect","onSuccess","onConnect","onFailure","userName","responseObject","errorCode","errorMessage","message","onMessageArrivedCommon","subscribeString","stringify","parsedTopic","destinationName","split","deviceId","valueCmdEvt","iotPayload","payloadString","imgComponent","s","imgContainer","scoreComponent","scoreContainer","VisualInsights","viDashboard","viContent","visual_insights_dashboard_vidashboard","AppRouter","react_router","exact","path","component","App","router_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8f9a7bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mark.d73d5003.png\";","import React, { Component } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport carla from \"../../../../assets/carla.png\"; // with import\nimport mark from \"../../../../assets/mark.png\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\n\nconst data = [\n  {\n    title: \"Mark\",\n    backside: \"Mark is Manufacturing Line Manager \",\n    post: \"Manufacturing Line Manager\",\n    tool: \"Predictive Maintanance\",\n    imgurl: mark,\n    redirect: \"/pm\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  },\n  {\n    title: \"Carla\",\n    backside: \"Carla is Quality Assurance Inspector\",\n    post: \"Quality Assurance Inspector\",\n    tool: \"Visual Insights\",\n    imgurl: carla,\n    redirect: \"/vi\",\n    redirectText: \"Run Demo\"\n  }\n];\n\nclass FlipCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isFlipped0: false,\n      isFlipped1: false,\n      isFlipped2: false,\n      personas: data\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //handleClick(e) {\n  // e.preventDefault();\n  // this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n  //}\n\n  handleClick = id => () => {\n    const cardId = `isFlipped${id}`;\n    this.setState({ [cardId]: !this.state[cardId] });\n    // console.log(cardId);\n  };\n\n  render() {\n    return (\n      <div className=\"cards\">\n        {this.state.personas.map((i, j) => {\n          console.log(j);\n          let currentCard = `isFlipped${j}`;\n          return (\n            <div className=\"card\">\n              <ReactCardFlip isFlipped={this.state[currentCard]}>\n                <div key=\"front\" className=\"mycard\">\n                  <img src={i.imgurl} onClick={this.handleClick(j)} />\n                  <div className=\"frontText\">\n                    <div className=\"frontTitle\"> {i.title}</div>\n                    {i.post}\n                  </div>\n                  <div className=\"frontText\">\n                    <br />\n                    {i.tool}\n                  </div>\n                </div>\n\n                <div\n                  onClick={this.handleClick(j)}\n                  key=\"back\"\n                  className=\"mycard\"\n                >\n                  <div className=\"text\">{i.backside}</div>\n                </div>\n              </ReactCardFlip>\n              <Link to={i.redirect}>\n                <div className=\"frontText2\">\n                  <br />\n                  {i.redirectText} <span>&#8594;</span>\n                </div>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default FlipCard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FlipCard from \"../persona/card/Card\";\nimport \"./index.css\";\n\nclass Persona extends Component {\n  render() {\n    return (\n      <div className=\"parent\">\n        <div className=\"P1\">\n          <h1>AI Powered Manufacturing with Watson IoT</h1>\n        </div>\n\n        <div className=\"P2\">\n          <FlipCard />\n        </div>\n        <div className=\"P3\">\n          <h1>Watson IoT</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Persona;\n","import React from 'react';\nimport './persona-header.css';\nimport { Link } from 'react-router-dom';\n\nconst header = (props) => (\n    <div className=\"Header\">\n        <Link to=\"/\">\n            <div>\n                <button>arrow</button>\n            </div>\n        </Link>\n        <div>{props.role}</div>\n    </div>\n);\n\nexport default header;\n\n","import React from 'react';\nimport './persona-time.css';\n\nconst personatime = (props) => {\n\n    return (\n        <div className=\"Persona-time\">\n            <div>Good-morning {props.name}</div>\n            <div>Local Time, Date</div>\n            <div>Weather and Weather Event</div>\n        </div>\n    );\n\n}\n\nexport default personatime;","import React from 'react';\nimport './robot-list.css';\n// import { Link } from \"react-router-dom\";\n\nconst robotList = (props) => {\n    const robots = [\n        { device: \"yaskawa\", overview: \" Yaskawa Overview\" },\n        { device: \"kuka\", overview: \" Kuka Overview\" },\n        { device: \"replay\", overview: \" Replay Overview\" }\n    ]\n\n    let robotList = robots.map(r => {\n        return (\n            <div className=\"Robot\" key={r.device}>\n                <div>{r.device}</div>\n                <div>{r.overview}</div>\n                {/* <Link to=\"/pm\"> */}\n                    <button value={r.device} onClick={props.clickHandler}>Details</button>\n                {/* </Link> */}\n                {/* <button onClick={props.onclick}>Details</button> */}\n            </div>\n        );\n    })\n\n    return (\n        <div className=\"Robot-list\">\n            {robotList}\n        </div>\n    );\n}\n\nexport default robotList;","import React from 'react';\n\nconst aux = (props) => {\n    return props.children;\n}\n\nexport default aux;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass GraphContainer extends PureComponent {\n  state = {};\n\n  render() {\n\n    if (this.props.data === undefined)\n      return <div></div>\n\n    let data;\n    let xDataKey;\n    let dataKey;\n\n    switch (this.props.type) {\n      case \"tempUpper\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.map(element => {\n          return ({ \"temp\": element.tempUpper, \"Temperatue\": element.tempUpper });\n        });\n        break;\n      case \"tempMiddle\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.map(element => {\n          return ({ \"temp\": element.tempMiddle, \"Temperatue\": element.tempMiddle });\n        });\n        break;\n      case \"tempLower\":\n        xDataKey = \"temp\";\n        dataKey = \"Temperatue\";\n        data = this.props.data.map(element => {\n          return ({ \"temp\": element.tempLower, \"Temperatue\": element.tempLower });\n        });\n        break;\n      case \"xPos\":\n        xDataKey = \"xPos\";\n        dataKey = \"X-Position\";\n        data = this.props.data.map(element => {\n          return ({ \"xPos\": element.posUpper, \"X-Position\": element.posUpper });\n        });\n        break;\n      case \"yPos\":\n        xDataKey = \"yPos\";\n        dataKey = \"Y-Position\";\n        data = this.props.data.map(element => {\n          return ({ \"yPos\": element.posMiddle, \"Y-Position\": element.posMiddle });\n        });\n        break;\n      case \"zPos\":\n        xDataKey = \"zPos\";\n        dataKey = \"Z-Position\";\n        data = this.props.data.map(element => {\n          return ({ \"zPos\": element.posLower, \"Z-Position\": element.posLower });\n        });\n        break;\n    }\n\n    return (\n      <LineChart\n        width={300}\n        height={200}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={xDataKey} />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey={dataKey} stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      </LineChart>\n    );\n  }\n}\n\nexport default GraphContainer;","import React, { PureComponent } from 'react';\nimport './PMContainer.css';\nimport Gauge from 'react-svg-gauge';\nimport GraphContainer from './GraphContainer';\n\nclass PMTorqueTempContainer extends PureComponent {\n\n    state = {\n        pmData: null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            pmData: props.pmData\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"pmContainerRight\">\n                <div className=\"pmDetails\">\n                    <Gauge value={this.props.pmData[this.props.pmData.length - 1][this.props.torqueType]} width={300} height={200} color={\"#959DFF\"} label=\"Torque\" />\n                </div>\n                <div className=\"pmDetails\">\n                    <h1>{this.props.pmData[this.props.pmData.length - 1][this.props.torqueType]}</h1>Units\n                </div>\n                <div className=\"pmDetails\">\n                    <GraphContainer type={this.props.tempType} data={this.props.pmData} />\n                </div>\n                <div className=\"pmDetails\">\n                    <GraphContainer type={this.props.posDirection} data={this.props.pmData} />\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default PMTorqueTempContainer;","import React, { PureComponent } from 'react';\nimport './PMContainer.css';\nimport Gauge from 'react-svg-gauge';\nimport GraphContainer from './GraphContainer';\nimport PMTorqueTempContainer from './PMTorqueTempContainer';\n\nclass PMContainer extends PureComponent {\n\n    state = {\n        pmData: null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            pmData: props.pmData\n        }\n\n    }\n\n    render() {\n\n        let pmData = <p>No Data </p>\n        if (this.props.pmData) {\n            pmData =\n                <div className=\"pmContainer\">\n                    <div className=\"pmContainerLeft\">\n                        <div className=\"pmContainerRight\">\n                        <Gauge value={this.props.pmData[this.props.pmData.length - 1][\"torqueUpper\"]} width={300} height={200} color={\"#959DFF\"} label=\"Torque\" />\n                        </div>\n                        <div className=\"pmContainerRight\">Details</div>\n                        <div className=\"pmContainerRight\">Details</div>\n                    </div>\n                    <div>\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueUpper\" tempType=\"tempUpper\" posDirection=\"xPos\" />\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueMiddle\" tempType=\"tempMiddle\" posDirection=\"yPos\" />\n                        <PMTorqueTempContainer pmData={this.props.pmData} torqueType=\"torqueLower\" tempType=\"tempLower\" posDirection=\"zPos\" />\n                    </div>\n                </div>\n\n        }\n\n        return (\n            <div >\n                {pmData}\n            </div>\n        );\n    }\n}\n\n\nexport default PMContainer;","import React, { Component } from 'react';\nimport PMContainer from './pmcontainer/PMContainer';\nimport axios from 'axios';\nimport './PMDashboard.css';\n\nclass PMDashboard extends Component {\n\n    //state is having properties:\n    //1.) yaskawaData : This will store Yaskawa Torque, Temperatures and Position Values\n    //2.) yaskawaHealth : This will store Yaskawa health Values\n    //3.) kukaData : This will store Yaskawa Torque, Temperatures and Position Values\n    //4.) kukaHealth : This is store Kuka health values\n    //5.) replayData :\n    //6.) replayHealth :\n\n    state = {};\n\n    wsCredentials = {\n        \"yaskawa\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n    ws = null;\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        switch(this.props.robot){\n            \n        case \"yaskawa\": \n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/yaskawaHistory\").then((response) => {\n                let yaskawaHistory = response.data.yaskawaHistory.map((element) => {\n                    // console.log(JSON.parse(element));\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: yaskawaHistory });\n            });\n            break;\n        case \"kuka\":\n            axios.get(\"http://aipm-gsc-nodered.mybluemix.net/kukaHistory\").then((response) => {\n                let kukaHistory = response.data.kukaHistory.map((element) => {\n                    return JSON.parse(element);\n                })\n                this.setState({ pmData: kukaHistory });\n            });\n            break;\n        case \"replay\":\n            //has to be completed\n            break;\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.ws) {\n            this.ws.close();\n        }\n    }\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n        this.ws = ws;\n        ws.onmessage = (event) => {\n            let msg = JSON.parse(event.data);\n\n            switch(msg.msgType){\n\n            case \"yaskawaTorqueTemp\": \n            case \"kukaTorqueTemp\":\n                this.setState({\n                    pmData: [...this.state.pmData, msg]\n                });\n            break;\n            //     case \"yaskawaRobotHealth\":\n            //     case \"kukaRobotHealth\": \n            //     this.setState({\n            //         pmHealthData: [...this.state.pmHealthData, msg]\n            //     });\n            // break;\n\n            }\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        ws.onclose = () => {\n            setTimeout(this.webSocketHandler, 3000);\n        }\n    }\n\n    render() {\n\n        let pmComponent = <PMContainer pmData={this.state.pmData} />;\n\n        return (\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div><h1>{this.props.robot}</h1></div>\n                    <div className=\"pmDataContainer\">\n                    </div>\n                    <div className=\"pmDataContainer\">\n                        {pmComponent}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PMDashboard;","import React, { Component } from 'react';\nimport Header from '../../common-ui/persona-header/persona-header';\nimport PersonaTime from '../../common-ui/persona-time/persona-time';\nimport RobotList from '../../common-ui/robot-list/robot-list';\nimport Aux from '../../common-ui/Aux/Aux';\nimport PMDashboard from './predictive-maintenance-dashboard/PMDashboard';\nimport './PM.css';\n\nclass PredictiveMaintenance extends Component {\n\n    state = {\n        pmDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            pmDashboard: true,\n            robotEnvironment: event.target.value\n        });\n    }\n\n    render() {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let pmContent = \"\";\n\n        if (this.state.pmDashboard) {\n            pmContent = <PMDashboard robot={this.state.robotEnvironment}/>\n        } else {\n            pmContent =\n                <Aux>\n                    <div className=\"persona-section\">\n                        <PersonaTime name=\"Carla\" />\n                        <div style={temp_style}> Assigned to line 3 today</div>\n                    </div>\n                    <RobotList clickHandler={this.robotClickHandler} />\n                </Aux>\n        }\n\n        return (\n            <div className=\"PredicitiveMaintenance\" >\n                <Header role=\"Line Manager Dashboard\" />\n                {pmContent}\n            </div>\n\n        );\n    }\n}\n\nexport default PredictiveMaintenance;\n","import React, { PureComponent } from 'react';\n// import Aux from '../../../../common-ui/Aux/Aux';\nimport './viContainer.css';\n\nclass ImgContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        img: null\n\n    }\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    static getDerivedStateFromProps = (props, state) => {\n        return {\n            slot: props.slot,\n            img: props.img\n        }\n\n    }\n\n    renderImage = () => {\n        let viImg = <p>No image </p>\n        let imgs = null;\n\n        if (this.state.img) {\n            let viImgStyle = \"url(data:image/jpeg;base64,\" + this.state.img + \")\";\n            imgs = {\n                backgroundImage: viImgStyle,\n                backgroundRepeat: \"no-repeat\",\n                width: \"100%\",\n                height: \"100%\",\n                backgroundSize: \"contain\",\n                backgroundPosition: \"center\"\n            }\n\n            viImg = <div style={imgs} >image: </div>\n        }\n\n        return viImg;\n    }\n\n    render() {\n\n        return (\n            <div className=\"imgContainer\" >\n                {this.renderImage()}\n            </div>\n        );\n    }\n}\n\n\nexport default ImgContainer;","import React, { PureComponent } from 'react';\n// import Aux from '../../../../common-ui/Aux/Aux';\nimport './viContainer.css';\n\nclass ScoreContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        score: null\n    }\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            slot: props.slot,\n            score: props.score\n        }\n\n    }\n\n    renderScore = () => {\n        let score = <p>No score </p>\n        if (this.state.score) {\n            score = <div>Score:\n            <div>iotTopic:  {this.state.score[0]}</div>\n                <div>robotEnvironment:  {this.state.score[0]}</div>\n                <div>mySpeakingClassification:  {this.state.score[1]}</div>\n                <div>myConfidence:  {this.state.score[2]}</div>\n                <div>mySlot:  {this.state.score[3]}</div>\n            </div>\n        }\n        return score;\n    }\n\n    render() {\n        return (\n            <div className=\"scoreContainer\" >\n                {this.renderScore()}\n            </div>\n        );\n    }\n}\n\n\nexport default ScoreContainer;","import React, { Component } from 'react';\nimport Aux from '../../../common-ui/Aux/Aux';\nimport ImgContainer from './viContainer/imgContainer';\nimport ScoreContainer from './viContainer/scoreContainer';\nimport { Client } from 'paho-mqtt';\nimport './vidashboard.css';\n\nclass videtails extends Component {\n\n    state = {\n        mqttClient: null,\n        imgdata: [\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null }\n        ],\n        scoredata: [\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null }\n        ]\n    }\n\n    mqttCredentials = [\n        {\n            clientId: 'a:qjue4x:' + Math.random().toString(16).substr(2, 8),\n            broker: \"qjue4x.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-qjue4x-al7mm3hvo4\",\n            password: \"+4B0N)ZGk@BVH1BFy9\"\n\n        },\n        {\n            clientId: 'a:xbyrsp:' + Math.random().toString(16).substr(2, 8),\n            broker: \"xbyrsp.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-xbyrsp-0rf3yixsqn\",\n            password: \"2I+?sdkfxml_OR8SMR\"\n\n        }\n    ]\n    //required if web sockets are different for different devices\n    wsCredentials = {\n        \"yaskawa\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n    ws = null;\n\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        //this.mqttHandler(this.props.robot);\n    };\n\n    componentWillUnmount(){\n        console.log(\"componentWillUnmount\");\n        if(this.ws){\n            this.ws.close(); \n            console.log(\"YES! - componentWillUnmount\");\n            \n        }\n    }\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n        this.ws = ws;\n        ws.onmessage = (event) => {\n            // parse the incoming message as a JSON object\n            let msg = JSON.parse(event.data);\n            // if(msg.msgType === undefined){\n            //     msg = msg.payload;\n            // }\n            // else{\n            //     console.log(\"a = \"+msg.msgType);\n            // }\n\n            console.log(\"MSG\");\n            console.log(msg);\n             if ((msg.msgType !== \"yaskawaTorqueTemp\") && (msg.msgType !== \"yaskawaRobotHealth\")) {\n                //debugger;\n\n                if(msg.payload.msgType === \"image\" && msg.payload.robotSource === this.props.robot ){\n                    let slot = msg.payload.slot;\n\n                    console.log(\"ws image msg.payload.robotEnvironment=\" + msg.payload.robotEnvironment);\n                        let roboImg = msg.payload.image.toString();\n                        let imgdata = this.state.imgdata;\n                        imgdata[slot - 1].slot = slot;\n                        imgdata[slot - 1].img = roboImg;\n\n                        this.setState({\n                            imgdata: imgdata\n                        }, () => {\n                            console.log(\"viIMAGE - Parent\");\n                            console.log(this.state);\n                        });\n                }\n                \n\n                //below line is required only if ws socket is the same        \n                // if (this.props.robot === msg.payload.robotEnvironment) {\n                     else if (msg.payload.type === \"scoring\" && msg.payload.robotSource === this.props.robot) {\n                         console.log(\"Score MSG\");\n                         console.log(msg);\n                         let score = [msg.payload.robotSource, msg.payload.speakingClassification, msg.payload.confidence, msg.payload.slot];\n                                let cur_scoredata = this.state.scoredata;\n                                cur_scoredata[msg.payload.slot - 1].score = score;\n                                cur_scoredata[msg.payload.slot - 1].slot = msg.payload.slot;\n\n                                this.setState({\n                                    scoredata: cur_scoredata\n                                });\n                         \n                        // // let myTopic = message.destinationName;\n                        // // let parsedTopic = myTopic.split(\"/\");\n                        // let deviceId = parsedTopic[4];\n                        // let valueCmdEvt = parsedTopic[6];\n                        // let textJson = parsedTopic[8];\n\n                        // if (textJson === \"json\") {\n                        //     let iotPayload = JSON.parse(message.payloadString);\n\n                        //     if (valueCmdEvt === \"score\") {\n                        //         let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n                        //         let cur_scoredata = this.state.scoredata;\n                        //         cur_scoredata[iotPayload.slot - 1].score = score;\n                        //         cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n                        //         this.setState({\n                        //             scoredata: cur_scoredata\n                        //         });\n\n                        //     }\n                        // }\n\n                    }\n                }\n            // }\n\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        // ws.onclose = () => {\n        //     setTimeout(this.webSocketHandler, 3000);\n        // }\n    }\n\n    mqttHandler = (device) => {\n\n        let mqtt_clientId = null;\n        let mqtt_broker = null;\n        let mqtt_username = null;\n        let mqtt_password = null;\n\n\n\n        switch (device) {\n            case 'yaskawa001':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                // debugger;\n                break;\n\n            case 'kuka001':\n                mqtt_clientId = this.mqttCredentials[1].clientId;\n                mqtt_broker = this.mqttCredentials[1].broker;\n                mqtt_username = this.mqttCredentials[1].username;\n                mqtt_password = this.mqttCredentials[1].password;\n                // console.log(\"switch - device -\" + device);\n                break;\n\n            case 'replay':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                // console.log(\"switch - device -\" + device);\n                break;\n\n            // case 'default': \n            // mqtt_clientId = this.mqttCredentials[0].clientId;\n            // mqtt_broker = this.mqttCredentials[0].broker;\n            // mqtt_username = this.mqttCredentials[0].username;\n            // mqtt_password = this.mqttCredentials[0].password;\n\n        }\n        // Create a client instance\n        let mqtt_client = new Client(mqtt_broker, 1883, mqtt_clientId);\n\n        // set callback handlers\n        mqtt_client.onConnectionLost = this.onConnectionLost;\n        mqtt_client.onMessageArrived = this.onMessageArrived;\n\n        this.setState({\n            mqttClient: mqtt_client\n        }, () => {\n            this.state.mqttClient.connect({\n                onSuccess: this.onConnect,\n                onFailure: this.onFailure,\n                userName: mqtt_username,   // apikey\n                password: mqtt_password\n            })\n        })\n\n    }\n\n    // called when the client loses its connection\n    onConnectionLost = (responseObject) => {\n        if (responseObject.errorCode !== 0) {\n            console.log(\"onConnectionLost:\" + responseObject.errorMessage);\n        }\n    }\n\n    onMessageArrived = (message) => {\n        console.log(\"inside onMessage 2\");\n        this.onMessageArrivedCommon(message);\n    }\n\n    onConnect = (props) => {\n        // Once a connection has been made, make a subscription and send a message.\n        let subscribeString = null;\n        switch (this.props.robot) {\n            case 'yaskawa001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'kuka001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'replay':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n        }\n        console.log(\"onConnect\");\n        this.state.mqttClient.subscribe(subscribeString);\n    }\n\n    onFailure = (responseObject) => {\n        // Once a connection has been made, make a subscription and send a message.\n        console.log(\"onFailure\" + JSON.stringify(responseObject));\n    }\n\n    // called when a message arrives\n    onMessageArrivedCommon = (message) => {\n\n        let myTopic = message.destinationName;\n        let parsedTopic = myTopic.split(\"/\");\n        let deviceId = parsedTopic[4];\n        let valueCmdEvt = parsedTopic[6];\n        let textJson = parsedTopic[8];\n\n        if (textJson === \"json\") {\n            let iotPayload = JSON.parse(message.payloadString);\n            console.log(\"wholedata\",valueCmdEvt,iotPayload);\n\n            if (valueCmdEvt === \"score\") {\n                let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n                let cur_scoredata = this.state.scoredata;\n                cur_scoredata[iotPayload.slot - 1].score = score;\n                cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n                this.setState({\n                    scoredata: cur_scoredata\n                });\n\n            }\n        }\n\n    }\n\n    render(props) {\n\n        let imgComponent = this.state.imgdata.map((s, i) => {\n\n            return (<ImgContainer\n                img={s.img}\n                slot={s.slot}\n                key={i} />);\n        });\n\n        let scoreComponent = this.state.scoredata.map((s, i) => {\n\n            return (\n                <ScoreContainer\n                    slot={s.slot}\n                    score={s.score}\n                    key={i} />\n            );\n        });\n\n        return (\n            <div className=\"dashboardContainer\">\n                <div>{this.props.robot}</div>\n                <div className=\"imgScoreContainer\">\n                    {imgComponent}\n                </div>\n                <div className=\"imgScoreContainer\">\n                    {scoreComponent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default videtails;","import React, { Component } from 'react';\nimport Header from '../../common-ui/persona-header/persona-header';\nimport PersonaTime from '../../common-ui/persona-time/persona-time';\nimport RobotList from '../../common-ui/robot-list/robot-list';\nimport Aux from '../../common-ui/Aux/Aux';\nimport VIdashboard from './visual-insights-dashboard/vidashboard';\n// import { Client } from 'paho-mqtt';\nimport './vi.css';\n\nclass VisualInsights extends Component {\n\n    state = {\n        viDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            viDashboard: true,\n            robotEnvironment: event.target.value\n        });\n        console.log(event.target.value);\n    }\n\n    // backArrowHandler = () => {\n    //     this.setState({\n    //         viDashboard: false,\n    //         robotEnvironment: null\n    //     });\n    // }\n\n    render() {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let viContent = \"\";\n\n        if (this.state.viDashboard) {\n            // console.log(\"inside IF\");\n            // console.log(this.state.imgMsg);\n            viContent =\n                <VIdashboard\n                    robot={this.state.robotEnvironment}\n                    // imgMsg={this.state.imgMsg}\n                // scoreMsg = {this.state.scoreMsg} \n                />\n        } else {\n            viContent =\n                <Aux>\n                    <div className=\"persona-section\">\n                        <PersonaTime name=\"Carla\" />\n                        <div style={temp_style}> Assigned to line 3 today</div>\n                    </div>\n                    <RobotList clickHandler={this.robotClickHandler} />\n                </Aux>\n        }\n\n        return (\n\n            <div className=\"VisualInsights\" >\n                <Header role=\"Line Manager Dashboard\" />\n                {viContent}\n                {/* <div className=\"RobotList\">\n                    <div>gm Carla</div>\n                    <div>QA</div>\n                </div> */}\n                {/* <RobotList onclick={this.loadVI}/> */}\n            </div>\n\n        );\n    }\n}\n\nexport default VisualInsights;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Persona from \"../components/screens/persona\";\nimport PredictiveMaintenance from \"../components/screens/predictive-maintenance\";\nimport VisualInsights from \"../components/screens/visual-insights\";\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Persona} />\n          <Route path=\"/pm\" component={PredictiveMaintenance} />\n          <Route path=\"/vi\" component={VisualInsights} />\n          {/* <Route path=\"/contact\" component={Contact} />\n          <Route component={Notfound} /> */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport \"./styles/App.css\";\n\n// IN THIS FILE :\n// a. site wide styles\n// b. site wide settings such Redux, etc.\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/carla.122e76ac.png\";"],"sourceRoot":""}