{"version":3,"sources":["components/screens/persona/index.js","components/screens/predictive-maintenance/index.js","components/common-ui/persona-header/persona-header.js","components/common-ui/persona-time/persona-time.js","components/common-ui/robot-list/robot-list.js","components/common-ui/Aux/Aux.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/imgContainer.js","components/screens/visual-insights/visual-insights-dashboard/viContainer/scoreContainer.js","components/screens/visual-insights/visual-insights-dashboard/vidashboard.js","components/screens/visual-insights/index.js","router/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["Persona","react_default","a","createElement","react_router_dom","to","Component","PredictiveMaintenance","header","props","className","role","personatime","name","robotList","device","overview","map","r","key","value","onClick","clickHandler","aux","children","ImgContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","slot","img","imgs","backgroundImage","backgroundRepeat","width","height","backgroundSize","backgroundPosition","style","PureComponent","getDerivedStateFromProps","ScoreContainer","score","videtails","mqttClient","imgdata","scoredata","mqttCredentials","clientId","Math","random","toString","substr","broker","subscribe","username","password","wsCredentials","yaskawa001","kuka001","replay","webSocketHandler","ws","wsUri","robot","WebSocket","onmessage","event","msg","JSON","parse","data","msgType","payload","robotEnvironment","type","console","log","roboImg","image","setState","onopen","onclose","setTimeout","mqttHandler","mqtt_clientId","mqtt_broker","mqtt_username","mqtt_password","mqtt_client","Client","onConnectionLost","onMessageArrived","connect","onSuccess","onConnect","onFailure","userName","responseObject","errorCode","errorMessage","message","onMessageArrivedCommon","subscribeString","stringify","parsedTopic","destinationName","split","deviceId","valueCmdEvt","iotPayload","payloadString","speakingClassification","confidence","cur_scoredata","imgComponent","s","i","imgContainer","scoreComponent","scoreContainer","VisualInsights","viDashboard","robotClickHandler","target","viContent","visual_insights_dashboard_vidashboard","Aux","persona_time_persona_time","border","padding","margin","robot_list_robot_list","persona_header_persona_header","AppRouter","react_router","exact","path","component","App","router_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08a3b2a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Persona extends Component {\n  render() {\n    return (\n      <div>\n        <div>Person screen</div>\n        <li>\n          <Link to=\"/pm\">\n            <button>GO to PM</button>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/vi\">\n            <button>GO to VI</button>\n          </Link>\n        </li>\n      </div>\n    );\n  }\n}\n\nexport default Persona;\n","import React, { Component } from \"react\";\n\nclass PredictiveMaintenance extends Component {\n  render() {\n    return <div> PredictiveMaintenance </div>;\n  }\n}\n\nexport default PredictiveMaintenance;\n","import React from 'react';\nimport './persona-header.css';\nimport { Link } from 'react-router-dom';\n\nconst header = (props) => (\n    <div className=\"Header\">\n        <Link to=\"/\">\n            <div>\n                <button>arrow</button>\n            </div>\n        </Link>\n        <div>{props.role}</div>\n    </div>\n);\n\nexport default header;\n\n","import React from 'react';\nimport './persona-time.css';\n\nconst personatime = (props) => {\n\n    return (\n        <div className=\"Persona-time\">\n            <div>Good-morning {props.name}</div>\n            <div>Local Time, Date</div>\n            <div>Weather and Weather Event</div>\n        </div>\n    );\n\n}\n\nexport default personatime;","import React from 'react';\nimport './robot-list.css';\nimport { Link } from \"react-router-dom\";\n\nconst robotList = (props) => {\n    const robots = [\n        { device: \"yaskawa001\", overview: \" Yaskawa Overview\" },\n        { device: \"kuka001\", overview: \" Kuka Overview\" },\n        { device: \"replay\", overview: \" Replay Overview\" }\n    ]\n\n    let robotList = robots.map(r => {\n        return (\n            <div className=\"Robot\" key={r.device}>\n                <div>{r.device}</div>\n                <div>{r.overview}</div>\n                {/* <Link to=\"/pm\"> */}\n                    <button value={r.device} onClick={props.clickHandler}>Details</button>\n                {/* </Link> */}\n                {/* <button onClick={props.onclick}>Details</button> */}\n            </div>\n        );\n    })\n\n    return (\n        <div className=\"Robot-list\">\n            {robotList}\n        </div>\n    );\n}\n\nexport default robotList;","import React from 'react';\n\nconst aux = (props) => {\n    return props.children;\n}\n\nexport default aux;","import React, { PureComponent } from 'react';\nimport Aux from '../../../../common-ui/Aux/Aux';\nimport './viContainer.css';\n\nclass ImgContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        img: null\n\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        return {\n            slot: props.slot,\n            img: props.img\n        }\n\n    }\n\n    render() {\n\n        let viImg = \"url(data:image/jpeg;base64,\" + this.state.img + \")\";\n        let imgs = {\n            backgroundImage: viImg,\n            backgroundRepeat: \"no-repeat\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundSize: \"contain\",\n            backgroundPosition: \"center\"\n        }\n\n\n        return (\n            <div className=\"imgContainer\" >\n                <div style={imgs} >image: </div>\n            </div>\n        );\n    }\n}\n\n\nexport default ImgContainer;","import React, { PureComponent } from 'react';\nimport Aux from '../../../../common-ui/Aux/Aux';\nimport './viContainer.css';\n\nclass ScoreContainer extends PureComponent {\n\n    state = {\n        slot: null,\n        score: null\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n\n        return {\n            slot: props.slot,\n            score: props.score\n        }\n\n    }\n\n    render() {\n\n        let score = <p>No score </p>\n        if (this.state.score) {\n            score = <div>Score:\n            <div>iotTopic:  {this.state.score[0]}</div>\n                <div>robotEnvironment:  {this.state.score[0]}</div>\n                <div>mySpeakingClassification:  {this.state.score[1]}</div>\n                <div>myConfidence:  {this.state.score[2]}</div>\n                <div>mySlot:  {this.state.score[3]}</div>\n            </div>\n        }\n\n        return (\n            <div className=\"scoreContainer\" >\n                {score}\n            </div>\n        );\n    }\n}\n\n\nexport default ScoreContainer;","import React, { Component } from 'react';\nimport Aux from '../../../common-ui/Aux/Aux';\nimport ImgContainer from './viContainer/imgContainer';\nimport ScoreContainer from './viContainer/scoreContainer';\nimport { Client } from 'paho-mqtt';\nimport './vidashboard.css';\n\nclass videtails extends Component {\n\n    state = {\n        mqttClient: null,\n        imgdata: [\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null },\n            { slot: null, img: null }\n        ],\n        scoredata: [\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null },\n            { slot: null, score: null }\n        ]\n    }\n\n    mqttCredentials = [\n        {\n            clientId: 'a:qjue4x:' + Math.random().toString(16).substr(2, 8),\n            broker: \"qjue4x.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-qjue4x-al7mm3hvo4\",\n            password: \"+4B0N)ZGk@BVH1BFy9\"\n\n        },\n        {\n            clientId: 'a:xbyrsp:' + Math.random().toString(16).substr(2, 8),\n            broker: \"xbyrsp.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/+/id/+/evt/+/fmt/json\",\n            username: \"a-xbyrsp-0rf3yixsqn\",\n            password: \"2I+?sdkfxml_OR8SMR\"\n\n        }\n    ]\n    //required if web sockets are different for different devices\n    wsCredentials = {\n        \"yaskawa001\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/yaskawa\",\n        \"kuka001\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc/kuka\",\n        \"replay\": \"wss://aipm-gsc-nodered.mybluemix.net/ws/aipm-gsc\"\n    }\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.webSocketHandler();\n        this.mqttHandler(this.props.robot);\n    };\n\n    webSocketHandler = () => {\n        let ws;\n        let wsUri = this.wsCredentials[this.props.robot];\n        ws = new WebSocket(wsUri);\n\n        ws.onmessage = (event) => {\n            // parse the incoming message as a JSON object\n            let msg = JSON.parse(event.data);\n            if ((msg.msgType != \"yaskawaTorqueTemp\") && (msg.msgType != \"yaskawaRobotHealth\")) {\n                debugger;\n                let slot = msg.payload.slot;\n\n                //below line is required only if ws socket is the same        \n                if (this.props.robot === msg.payload.robotEnvironment) {\n                    if (msg.payload.type === \"image\") {\n                        console.log(\"ws image msg.payload.robotEnvironment=\" + msg.payload.robotEnvironment);\n                        let roboImg = msg.payload.image.toString();\n                        let imgdata = this.state.imgdata;\n                        imgdata[slot - 1].slot = slot;\n                        imgdata[slot - 1].img = roboImg;\n    \n                        this.setState({\n                            imgdata: imgdata\n                        }, () => {\n                            console.log(\"viIMAGE - Parent\");\n                            console.log(this.state);\n                        });\n                    }\n                }\n            }\n\n        }\n\n        ws.onopen = () => {\n            console.log(\"connected\");\n        }\n        ws.onclose = () => {\n            setTimeout(this.webSocketHandler, 3000);\n        }\n    }\n\n    mqttHandler = (device) => {\n\n        let mqtt_clientId = null;\n        let mqtt_broker = null;\n        let mqtt_username = null;\n        let mqtt_password = null;\n\n\n\n        switch (device) {\n            case 'yaskawa001':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                // debugger;\n                break;\n\n            case 'kuka001':\n                mqtt_clientId = this.mqttCredentials[1].clientId;\n                mqtt_broker = this.mqttCredentials[1].broker;\n                mqtt_username = this.mqttCredentials[1].username;\n                mqtt_password = this.mqttCredentials[1].password;\n                console.log(\"switch - device -\" + device);\n                break;\n\n            case 'replay':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                console.log(\"switch - device -\" + device);\n                break;\n\n        }\n        // Create a client instance\n        let mqtt_client = new Client(mqtt_broker, 1883, mqtt_clientId);\n\n        // set callback handlers\n        mqtt_client.onConnectionLost = this.onConnectionLost;\n        mqtt_client.onMessageArrived = this.onMessageArrived;\n\n        this.setState({\n            mqttClient: mqtt_client\n        }, () => {\n            this.state.mqttClient.connect({\n                onSuccess: this.onConnect,\n                onFailure: this.onFailure,\n                userName: mqtt_username,   // apikey\n                password: mqtt_password\n            })\n        })\n\n    }\n\n    // called when the client loses its connection\n    onConnectionLost = (responseObject) => {\n        if (responseObject.errorCode !== 0) {\n            console.log(\"onConnectionLost:\" + responseObject.errorMessage);\n        }\n    }\n\n    onMessageArrived = (message) => {\n        console.log(\"inside onMessage 2\");\n        this.onMessageArrivedCommon(message);\n    }\n\n    onConnect = (props) => {\n        // Once a connection has been made, make a subscription and send a message.\n        let subscribeString = null;\n        switch (this.props.robot) {\n            case 'yaskawa001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'kuka001':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n\n            case 'replay':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + this.props.robot);\n                break;\n        }\n        console.log(\"onConnect\");\n        this.state.mqttClient.subscribe(subscribeString);\n    }\n\n    onFailure = (responseObject) => {\n        // Once a connection has been made, make a subscription and send a message.\n        console.log(\"onFailure\" + JSON.stringify(responseObject));\n    }\n\n    // called when a message arrives\n    onMessageArrivedCommon = (message) => {\n\n        let myTopic = message.destinationName;\n        let parsedTopic = myTopic.split(\"/\");\n        let deviceId = parsedTopic[4];\n        let valueCmdEvt = parsedTopic[6];\n        let textJson = parsedTopic[8];\n\n        if (textJson === \"json\") {\n            let iotPayload = JSON.parse(message.payloadString);\n\n            if (valueCmdEvt === \"score\") {\n                let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n                let cur_scoredata = this.state.scoredata;\n                cur_scoredata[iotPayload.slot - 1].score = score;\n                cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n\n                this.setState({\n                    scoredata: cur_scoredata\n                });\n\n            }\n        }\n\n    }\n\n    render(props) {\n\n        let imgComponent = this.state.imgdata.map((s, i) => {\n\n            return (<ImgContainer\n                img={s.img}\n                slot={s.slot}\n                key={i} />);\n        });\n\n        let scoreComponent = this.state.scoredata.map((s, i) => {\n\n            return (\n                <ScoreContainer\n                    slot={s.slot}\n                    score={s.score}\n                    key={i} />\n            );\n        });\n\n        return (\n            <div className=\"dashboardContainer\">\n                <div>{this.props.robot}</div>\n                <div className=\"imgScoreContainer\">\n                    {imgComponent}\n                </div>\n                <div className=\"imgScoreContainer\">\n                    {scoreComponent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default videtails;","import React, { Component } from 'react';\nimport Header from '../../common-ui/persona-header/persona-header';\nimport PersonaTime from '../../common-ui/persona-time/persona-time';\nimport RobotList from '../../common-ui/robot-list/robot-list';\nimport Aux from '../../common-ui/Aux/Aux';\nimport VIdashboard from './visual-insights-dashboard/vidashboard';\nimport { Client } from 'paho-mqtt';\nimport './vi.css';\n\nclass VisualInsights extends Component {\n\n    state = {\n        viDashboard: false,\n        robotEnvironment: null,\n    }\n\n    robotClickHandler = (event) => {\n        this.setState({\n            viDashboard: true,\n            robotEnvironment: event.target.value\n        });\n        console.log(event.target.value);\n    }\n\n    render() {\n        const temp_style = {\n            border: \"1px solid green\",\n            padding: \"10px\",\n            margin: \"10px\"\n        }\n\n        let viContent = \"\";\n\n        if (this.state.viDashboard) {\n            // console.log(\"inside IF\");\n            // console.log(this.state.imgMsg);\n            viContent =\n                <VIdashboard\n                    robot={this.state.robotEnvironment}\n                    // imgMsg={this.state.imgMsg}\n                // scoreMsg = {this.state.scoreMsg} \n                />\n        } else {\n            viContent =\n                <Aux>\n                    <div className=\"persona-section\">\n                        <PersonaTime name=\"Carla\" />\n                        <div style={temp_style}> Assigned to line 3 today</div>\n                    </div>\n                    <RobotList clickHandler={this.robotClickHandler} />\n                </Aux>\n        }\n\n        return (\n\n            <div className=\"VisualInsights\" >\n                <Header role=\"Line Manager Dashboard\" />\n                {viContent}\n                {/* <div className=\"RobotList\">\n                    <div>gm Carla</div>\n                    <div>QA</div>\n                </div> */}\n                {/* <RobotList onclick={this.loadVI}/> */}\n            </div>\n\n        );\n    }\n}\n\nexport default VisualInsights;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Persona from \"../components/screens/persona\";\nimport PredictiveMaintenance from \"../components/screens/predictive-maintenance\";\nimport VisualInsights from \"../components/screens/visual-insights\";\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Persona} />\n          <Route path=\"/pm\" component={PredictiveMaintenance} />\n          <Route path=\"/vi\" component={VisualInsights} />\n          {/* <Route path=\"/contact\" component={Contact} />\n          <Route component={Notfound} /> */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport \"./styles/App.css\";\n\n// IN THIS FILE :\n// a. site wide styles\n// b. site wide settings such Redux, etc.\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}