{"version":3,"sources":["Assets/Asset2.png","Assets/Asset3.png","Assets/Asset4.png","Assets/Asset6.png","Assets/Asset7.png","Assets/Asset8.png","Assets/robot-arm-yellow.png","Assets/robot-arm-orange.png","Assets/Asset5.png","components/3DGraph/3DGraph.js","components/RobotHealth/RobotHealth.js","components/ProgressBar/ProgressBar.js","components/TorqueContent/TorqueContent.js","components/dashboard/dashboardContent/dashboardContent.js","components/dashboard/layout/layout.js","components/dashboard/dashboard.js","router/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Graph","props","dataArray","state","yaskawa1","width","window","innerWidth","height","innerHeight","$","ajax","url","type","dataType","then","response","yaskawaHistory","slice","map","record","index","setState","JSON","parse","console","log","addEventListener","className","data","name","x","this","xPos","length","y","yPos","z","zPos","mode","marker","color","size","opacity","useResizeHandler","style","layout","autosize","title","text","font","family","showlegend","paper_bgcolor","margin","t","b","l","r","scene","bgcolor","aspectmode","xaxis","showgrid","showticklabels","showbackground","backgroundcolor","showaxeslabels","yaxis","zaxis","camera","eye","up","center","React","Component","RobotHealth","src","image","ProgressBar","TorqueContent","torque","DashboardContent","sTorque","lTorque","uTorque","rTorque","bTorque","tTorque","mqttClient","mqttCredentials","clientId","Math","random","toString","substr","broker","subscribe","username","password","mqttHandler","device","mqtt_clientId","mqtt_broker","mqtt_username","mqtt_password","mqtt_client","Client","onConnectionLost","onMessageArrived","connect","onSuccess","onConnect","bind","onFailure","userName","useSSL","responseObject","errorCode","errorMessage","message","onMessageArrivedCommon","subscribeString","stringify","parsedTopic","destinationName","split","valueCmdEvt","json","payloadString","healthScore","asset4","score","asset3","asset2","asset6","asset7","asset8","Layout","Dashboard","AppRouter","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9a1671c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Asset2.ea47277b.png\";","module.exports = __webpack_public_path__ + \"static/media/Asset3.b4c2aa54.png\";","module.exports = __webpack_public_path__ + \"static/media/Asset4.266f0140.png\";","module.exports = __webpack_public_path__ + \"static/media/Asset6.cd12a777.png\";","module.exports = __webpack_public_path__ + \"static/media/Asset7.72814816.png\";","module.exports = __webpack_public_path__ + \"static/media/Asset8.8ee4f9ef.png\";","module.exports = __webpack_public_path__ + \"static/media/robot-arm-yellow.14e8e46b.png\";","module.exports = __webpack_public_path__ + \"static/media/robot-arm-orange.cd7d525b.png\";","module.exports = __webpack_public_path__ + \"static/media/Asset5.27c8bb0a.png\";","import React from 'react'\nimport Plot from 'react-plotly.js';\n// import axios from 'axios';\nimport $ from 'jquery'\nimport './3DGraph.css'\nimport sizeMe from 'react-sizeme'\n\n\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.dataArray = [\n      {      \n        \"sTorque\": \"0\",      \n        \"lTorque\": \"2520\",      \n        \"uTorque\": \"-3154\",      \n        \"rTorque\": \"-576\",      \n        \"bTorque\": \"0\",      \n        \"tTorque\": \"352\",      \n        \"xPos\": \"635202\",      \n        \"yPos\": \"-428911\",      \n        \"zPos\": \"594962\",      \n        \"timestamp\": 1585325912286\n        },\n\n      {\n\n      \"sTorque\": \"0\",      \n      \"lTorque\": \"5320\",      \n      \"uTorque\": \"-2158\",      \n      \"rTorque\": \"-704\",      \n      \"bTorque\": \"-192\",      \n      \"tTorque\": \"-256\",      \n      \"xPos\": \"795447\",      \n      \"yPos\": \"169888\",      \n      \"zPos\": \"196498\",      \n      \"timestamp\": 1585325880409      \n      },       \n             \n      \n      {      \n      \"sTorque\": \"0\",      \n      \"lTorque\": \"2520\",      \n      \"uTorque\": \"-3154\",      \n      \"rTorque\": \"-576\",      \n      \"bTorque\": \"0\",      \n      \"tTorque\": \"352\",      \n      \"xPos\": \"635202\",      \n      \"yPos\": \"-428911\",      \n      \"zPos\": \"594962\",      \n      \"timestamp\": 1585325912286      \n      },\n      \n      {      \n      \"sTorque\": \"0\",      \n      \"lTorque\": \"5180\",      \n      \"uTorque\": \"-2158\",      \n      \"rTorque\": \"-736\",\n      \"bTorque\": \"-384\",\n      \"tTorque\": \"-256\",\n      \"xPos\": \"794744\",\n      \"yPos\": \"169223\",\n      \"zPos\": \"192847\",\n      \"timestamp\": 1585325930250\n      }]\n\n\n    this.state = {\n      yaskawa1: [],\n      width: window.innerWidth/4.6,\n      height: window.innerHeight/3.1\n    }\n\n\n  }\n\n  getYaskawa1Data() {\n    $.ajax({\n      url: 'https://aipm-gsc-nodered.mybluemix.net/yaskawaHistory',\n      type: 'GET',\n      dataType: 'json',\n\n    }).then(response => {\n\n\n      response.yaskawaHistory.slice(0, 10).map((record, index) => {\n        this.setState({\n          yaskawa1: [...this.state.yaskawa1, JSON.parse(record)]\n        })\n        // return JSON.parse(record)\n      })\n\n      console.log(this.state.yaskawa1)\n\n    })\n\n  }\n\n  componentDidMount() {\n    // this.getYaskawa1Data()\n\n    window.addEventListener('resize', () => {\n      this.setState({\n        width: window.innerWidth/4.6,\n        height: window.innerHeight/3.1\n      })\n    })\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"Graph-Container\">\n        <Plot\n          data={[\n            {\n              name: \"Yaskawa Position\",\n              x: [\n                this.props.xPos[this.props.xPos.length-1],\n                this.props.xPos[this.props.xPos.length-2],\n                this.props.xPos[this.props.xPos.length-3],\n                this.props.xPos[this.props.xPos.length-4],\n                this.props.xPos[this.props.xPos.length-5],\n              // this.dataArray[0]['xPos'], \n              // this.dataArray[1]['xPos'], \n              // this.dataArray[2]['xPos'], \n              // this.dataArray[3]['xPos'], \n              // this.dataArray[0]['xPos']\n            ],\n              y: [\n                this.props.yPos[this.props.yPos.length-1],\n                this.props.yPos[this.props.yPos.length-2],\n                this.props.yPos[this.props.yPos.length-3],\n                this.props.yPos[this.props.yPos.length-4],\n                this.props.yPos[this.props.yPos.length-5],\n                // this.dataArray[0]['yPos'], \n                // this.dataArray[1]['yPos'], \n                // this.dataArray[2]['yPos'], \n                // this.dataArray[3]['yPos'], \n                // this.dataArray[0]['xPos']\n              ],\n              z: [\n                this.props.zPos[this.props.zPos.length-1],\n                this.props.zPos[this.props.zPos.length-2],\n                this.props.zPos[this.props.zPos.length-3],\n                this.props.zPos[this.props.zPos.length-4],\n                this.props.zPos[this.props.zPos.length-5],\n                // this.dataArray[0]['zPos'], \n                // this.dataArray[1]['zPos'], \n                // this.dataArray[2]['zPos'], \n                // this.dataArray[3]['zPos'], \n                // this.dataArray[0]['xPos']\n              ],\n              type: 'scatter3d',\n              mode: 'markers',\n              marker: {\n                color: [\n                  'rgba(251,51,129,1)',\n                  'rgba(221,79,134,1)',\n                  'rgba(178,73,112,1)',\n                  'rgba(134,60,88,1)',\n                  'rgba(95,42,61,1)'\n                ],\n                size: '15',\n                opacity: \".7\"\n                // symbol: ['circle-open', 'circle-open','circle-open','circle-open', 'circle']\n              },\n\n\n            },\n            // {\n            //   name: \"Current Point\",\n            //   x: [5, 10, 15, 20, 30],\n            //   y: [10, 20, 30, 35, 40],\n            //   z: [4, 9, 12, 16, 20],\n            //   type: 'scatter3d',\n            //   opacity: '1',\n            //   mode: 'lines',\n            //   marker: { \n            //     color: '#56D679',\n            //     size: '0' \n            //    }\n            // }\n          ]}\n          useResizeHandler={true}\n          style={{height: this.state.height, width: this.state.width}}\n          layout={{\n            // width: 300,\n            // height: 300,\n            autosize: true,\n            title: {\n              text: \"Position\",\n              x: '.05',\n              y: '.97',\n              font: {\n                size: '22',\n                color: '#A4A4A4',\n                family: 'IBMPlexSans'\n              }\n            },\n            showlegend: false,\n            paper_bgcolor: '#252525',\n            margin: {\n              t: \"10\",\n              b: \"10\",\n              l: \"10\",\n              r: \"10\"\n            },\n            scene: {\n              bgcolor: \"#252525\",\n              // bgcolor: \"rgba(37,37,37,1)\",\n              aspectmode: \"cube\",\n              xaxis: {\n                // range: [-1000000,1000000],\n                title: {\n                  text: \"\"\n                },\n                showgrid: false,\n                showticklabels: false,\n                showbackground: true,\n                backgroundcolor: \"rgba(37,37,37,.2)\",\n                showaxeslabels: false,\n                // visible: false\n              },\n              yaxis: {\n                // range: [-1000000,1000000],\n                title: {\n                  text: \"\"\n                },\n                showbackground: true,\n                backgroundcolor: \"rgba(37,37,37,.5)\",\n                showgrid: false,\n                showticklabels: false,\n                showaxeslabels: false,\n                // visible: false\n              },\n              zaxis: {\n                // range: [-1000000,1000000],\n                title: {\n                  text: \"\"\n                },\n                showbackground: true,\n                backgroundcolor: \"rgba(37,37,37,.9)\",\n                showgrid: false,\n                showticklabels: false,\n                showaxeslabels: false,\n                // visible: false\n              },\n              camera: {\n                eye: {\n                  x: 1.5,\n                  y: 1.5,\n                  z: 1.5\n                },\n                up: {\n                  x: 0,\n                  y: 0,\n                  z: 1\n                },\n                center: {\n                  x: -.75,\n                  y: -.75,\n                  z: -.5\n                }\n              }\n            }\n          }}\n        />\n      </div>\n    )\n  }\n\n}\n\nexport default Graph;","import React from 'react'\nimport './RobotHealth.css'\n\nclass RobotHealth extends React.Component {\n    \n    render() {\n        return (\n            <div className=\"health-container\">\n                <div className=\"title\">Robot Health</div>\n                <div className=\"score\">98.7</div>\n                <div >\n                    <img className=\"image\" src={this.props.image}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RobotHealth;","import React from 'react';\nimport './ProgressBar.css';\n\nclass ProgressBar extends React.Component {\n\n    render() {\n        return (\n            <div className=\"progress-bar-background\">\n                <div className=\"torque-progress\"/>\n            </div>\n        )\n    }\n}\n\nexport default ProgressBar;","import React from 'react';\nimport './TorqueContent.css';\nimport ProgressBar from '../ProgressBar/ProgressBar';\n\nclass TorqueContent extends React.Component {\n\n    render() {\n        return (\n            <div className=\"torque-container\">\n                <div className=\"torque-title\">{this.props.title}</div>\n                <div className=\"torque-score\">{this.props.torque}</div>\n                <div className=\"image-progressbar-container\">\n                    <img className=\"torque-image\" src={this.props.image} />\n                    <ProgressBar/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TorqueContent;","import React, { Component } from 'react';\nimport './dashboardContent.css';\nimport Graph from '../../3DGraph/3DGraph';\nimport RobotHealth from '../../RobotHealth/RobotHealth';\nimport TorqueContent from '../../TorqueContent/TorqueContent';\nimport yellowRobot from '../../../Assets/robot-arm-yellow.png';\nimport orangeRobot from '../../../Assets/robot-arm-orange.png';\nimport asset2 from '../../../Assets/Asset2.png';\nimport asset3 from '../../../Assets/Asset3.png';\nimport asset4 from '../../../Assets/Asset4.png';\nimport asset5 from '../../../Assets/Asset5.png';\nimport asset6 from '../../../Assets/Asset6.png';\nimport asset7 from '../../../Assets/Asset7.png';\nimport asset8 from '../../../Assets/Asset8.png';\nimport { Client } from 'paho-mqtt';\n\n\nclass DashboardContent extends Component {\n\n    state = {\n        sTorque: null,\n        lTorque: null,\n        uTorque: null,\n        rTorque: null,\n        bTorque: null,\n        tTorque: null,\n        xPos: [],\n        yPos: [],\n        zPos: [],\n        mqttClient: null\n    }\n\n    mqttCredentials = [\n        {\n            clientId: 'a:vrvzh6:' + Math.random().toString(16).substr(2, 8),\n            broker: \"vrvzh6.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/gsc-yaskawa-gw/id/gsc-yaskawa-01/evt/update/fmt/json\",\n            username: \"a-vrvzh6-lmttnkzxht\",\n            password: \"LRVitW+(soqXuZdJT!\"\n        },\n        {\n            clientId: 'a:vrvzh6:' + Math.random().toString(16).substr(2, 8),\n            broker: \"vrvzh6.messaging.internetofthings.ibmcloud.com\",\n            subscribe: \"iot-2/type/gsc-yaskawa-gw/id/gsc-yaskawa-01/evt/update/fmt/json\",\n            username: \"a-vrvzh6-lmttnkzxht\",\n            password: \"LRVitW+(soqXuZdJT!\"\n        }\n    ]\n\n    componentDidMount() {\n        this.mqttHandler('gsc-yaskawa-tire01');\n\n        // var mqtt = require('mqtt')\n        // var client = mqtt.connect('wss://test.mosquitto.org:8081')\n\n        // client.on('connect', (err) => {\n        //     client.subscribe('telemetry', (err) => {\n        //         if (!err) {\n        //             console.log(\"Subscribe Successful\")\n        //         }\n        //     })\n        // })\n\n        // client.on('message', (topic, message) => {\n            // var json = JSON.parse(message)\n\n            // this.setState({\n            //     data: json,\n            //     healthScore: null,\n            //     sTorque: json.sTorque,\n            //     lTorque: json.lTorque,\n            //     uTorque: json.uTorque,\n            //     rTorque: json.rTorque,\n            //     bTorque: json.bTorque,\n            //     tTorque: json.tTorque,\n            //     xPos: [...this.state.xPos, json.xPos],\n            //     yPos: [...this.state.yPos, json.yPos],\n            //     zPos: [...this.state.zPos, json.zPos],\n            // })\n        //     console.log(json)\n\n        // })\n\n    }\n\n    mqttHandler = (device) => {\n        let mqtt_clientId = null;\n        let mqtt_broker = null;\n        let mqtt_username = null;\n        let mqtt_password = null;\n        switch (device) {\n            case 'gsc-yaskawa-tire01':\n                mqtt_clientId = this.mqttCredentials[0].clientId;\n                mqtt_broker = this.mqttCredentials[0].broker;\n                mqtt_username = this.mqttCredentials[0].username;\n                mqtt_password = this.mqttCredentials[0].password;\n                // debugger;\n                break;\n            case 'gsc-yaskawa-tire02':\n                mqtt_clientId = this.mqttCredentials[1].clientId;\n                mqtt_broker = this.mqttCredentials[1].broker;\n                mqtt_username = this.mqttCredentials[1].username;\n                mqtt_password = this.mqttCredentials[1].password;\n                // console.log(\"switch - device -\" + device);\n                break;\n            // case 'default': \n            // mqtt_clientId = this.mqttCredentials[0].clientId;\n            // mqtt_broker = this.mqttCredentials[0].broker;\n            // mqtt_username = this.mqttCredentials[0].username;\n            // mqtt_password = this.mqttCredentials[0].password;\n        }\n        // Create a client instance\n        let mqtt_client = new Client(mqtt_broker, 8883, mqtt_clientId);\n        // set callback handlers\n        mqtt_client.onConnectionLost = this.onConnectionLost;\n        mqtt_client.onMessageArrived = this.onMessageArrived;\n        this.setState({\n            mqttClient: mqtt_client\n        }, () => {\n            // this.client.connect({onSuccess:this.onConnect.bind(this)});\n            this.state.mqttClient.connect({\n                onSuccess: this.onConnect.bind(this),\n                onFailure: this.onFailure,\n                userName: mqtt_username,   // apikey\n                password: mqtt_password,\n                useSSL: true,\n            })\n        })\n    }\n    // called when the client loses its connection\n    onConnectionLost = (responseObject) => {\n        if (responseObject.errorCode !== 0) {\n            console.log(\"onConnectionLost:\" + responseObject.errorMessage);\n        }\n    }\n    onMessageArrived = (message) => {\n        console.log(\"inside onMessage 2\");\n        this.onMessageArrivedCommon(message);\n    }\n    onConnect = (props) => {\n        // Once a connection has been made, make a subscription and send a message.\n        let subscribeString = null;\n        switch ('gsc-yaskawa-tire01') {\n            case 'gsc-yaskawa-tire01':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + \"gsc-yaskawa-tire01\");\n                break;\n            case 'gsc-yaskawa-tire02':\n                subscribeString = this.mqttCredentials[0].subscribe;\n                console.log(\"switch - subscribe -\" + \"gsc-yaskawa-tire02\");\n                break;\n        }\n        console.log(\"onConnect\");\n        this.state.mqttClient.subscribe(subscribeString);\n    }\n    onFailure = (responseObject) => {\n        // Once a connection has been made, make a subscription and send a message.\n        console.log(\"onFailure\" + JSON.stringify(responseObject));\n    }\n    // called when a message arrives\n    onMessageArrivedCommon = (message) => {\n        let myTopic = message.destinationName;\n        let parsedTopic = myTopic.split(\"/\");\n        let deviceId = parsedTopic[4];\n        let valueCmdEvt = parsedTopic[6];\n        let textJson = parsedTopic[8];\n        if (textJson === \"json\") {\n            let json = JSON.parse(message.payloadString);\n            console.log(\"wholedata\",valueCmdEvt,json);\n\n            this.setState({\n                data: json,\n                healthScore: null,\n                sTorque: json.sTorque,\n                lTorque: json.lTorque,\n                uTorque: json.uTorque,\n                rTorque: json.rTorque,\n                bTorque: json.bTorque,\n                tTorque: json.tTorque,\n                xPos: [...this.state.xPos, json.xPos],\n                yPos: [...this.state.yPos, json.yPos],\n                zPos: [...this.state.zPos, json.zPos],\n            })\n\n            // if (valueCmdEvt === \"score\") {\n            //     let score = [deviceId, iotPayload.speakingClassification, iotPayload.confidence, iotPayload.slot];\n            //     let cur_scoredata = this.state.scoredata;\n            //     cur_scoredata[iotPayload.slot - 1].score = score;\n            //     cur_scoredata[iotPayload.slot - 1].slot = iotPayload.slot;\n            //     this.setState({\n            //         scoredata: cur_scoredata\n            //     });\n            // }\n        }\n    }\n\n\n    render() {\n        return (\n            // <p>this is also stupid</p> \n            // <p>what do u mean lol</p>\n            <div className=\"contents-container\">\n                <div className=\"r1-row robot-col card-padding robot-name\">Robot 1</div>\n                <div className=\"r1-row robot-health card-padding card-color\"><RobotHealth image={null} /></div>\n                <div className=\"r1-row position card-padding card-color\">\n                    <Graph\n                        xPos={this.state.xPos}\n                        yPos={this.state.yPos}\n                        zPos={this.state.zPos}\n                    />\n                </div>\n                <div className=\"j1-j2-j3-r1 j1-j4-col\"><TorqueContent torque={this.state.sTorque} title=\"S\" image={asset4} score={98.7} /></div>\n                <div className=\"j1-j2-j3-r1 j2-j5-col\"><TorqueContent torque={this.state.lTorque} title=\"L\" image={asset3} score={98.7} /></div>\n                <div className=\"j1-j2-j3-r1 j3-j6-col\"><TorqueContent torque={this.state.uTorque} title=\"U\" image={asset2} score={98.7} /></div>\n                <div className=\"j4-j5-j6-r1 j1-j4-col\"><TorqueContent torque={this.state.rTorque} title=\"R\" image={asset6} score={98.7} /></div>\n                <div className=\"j4-j5-j6-r1 j2-j5-col\"><TorqueContent torque={this.state.bTorque} title=\"B\" image={asset7} score={98.7} /></div>\n                <div className=\"j4-j5-j6-r1 j3-j6-col\"><TorqueContent torque={this.state.tTorque} title=\"T\" image={asset8} score={98.7} /></div>\n                <div className=\"gap-line\" />\n                <div className=\"r2-row robot-col card-padding robot-name\">Robot 2</div>\n                <div className=\"r2-row robot-health card-padding card-color\"><RobotHealth image={null} /></div>\n                <div className=\"r2-row position card-padding card-color\">\n                    <Graph\n                        xPos={this.state.xPos}\n                        yPos={this.state.yPos}\n                        zPos={this.state.zPos}\n                    />\n                </div>\n                <div className=\"j1-j2-j3-r2 j1-j4-col\"><TorqueContent torque={this.state.sTorque} title=\"S\" image={asset2} score={98.7} /></div>\n                <div className=\"j1-j2-j3-r2 j2-j5-col\"><TorqueContent torque={this.state.lTorque} title=\"L\" image={asset3} score={98.7} /></div>\n                <div className=\"j1-j2-j3-r2 j3-j6-col\"><TorqueContent torque={this.state.uTorque} title=\"U\" image={asset4} score={98.7} /></div>\n                <div className=\"j4-j5-j6-r2 j1-j4-col\"><TorqueContent torque={this.state.rTorque} title=\"R\" image={asset6} score={98.7} /></div>\n                <div className=\"j4-j5-j6-r2 j2-j5-col\"><TorqueContent torque={this.state.bTorque} title=\"B\" image={asset7} score={98.7} /></div>\n                <div className=\"j4-j5-j6-r2 j3-j6-col\"><TorqueContent torque={this.state.tTorque} title=\"T\" image={asset8} score={98.7} /></div>\n            </div>\n        );\n    }\n}\n\nexport default DashboardContent;","import React, { Component } from 'react';\n// import ScreenContents from './ScreenContents/screenContents';\nimport DashboardContent from '../dashboardContent/dashboardContent';\nimport './layout.css';\n\nclass Layout extends Component {\n    render() {\n        // console.log(this.props.content);\n        return (\n            <div className=\"layout-grid\">\n                <div className=\"header\">IBM</div>\n                <div className=\"below-header\"></div>\n                <div className=\"left-col\">\n                    {/* <DashboardContent />  */}\n                </div>\n                <div className=\"main-content\">\n                    <DashboardContent />\n                    {/* <ScreenContents>\n                        {this.props.content}\n                    </ScreenContents> */}\n\n                </div>\n                <div className=\"right-col\"></div>\n                <div className=\"footer\">footer</div>\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, {Component} from 'react';\nimport Layout from './layout/layout';\nimport DashboardContent from './dashboardContent/dashboardContent';\n\nclass Dashboard extends Component{\n\nrender(){\n    let cont = <p>Content1</p>\n    return(\n        <Layout></Layout>\n        \n        // content={DashboardContent}\n    \n    );\n}\n}\n\nexport default Dashboard;","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Dashboard from \"../components/dashboard/dashboard\";\n\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React,{Component} from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport \"./styles/App.css\";\n\n// IN THIS FILE :\n// a. site wide styles\n// b. site wide settings such Redux, etc.\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <AppRouter />\n//     </div>\n//   );\n// } \n\nclass App extends Component {\n\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <AppRouter />\n      </div>\n    );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport request from 'request';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ///////////////////////////\n\n// process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\"\n\n// //const request = require('request');\n\n// var username = \"admin\",\n\n//     password = \"Net@pp123!\",\n\n//     uuid = \"7a085276-b793-11e9-b3a4-00a0b89c650c\",\n\n//     url = \"https://aipm-gsc-nodered.mybluemix.net/getVolumes\"\n\n\n// console.log(\"HEREEE\");\n\n \n\n// request(url, { method : 'GET', json: true }, function (err, res, body) {\n\n//   if (err) { return console.log(\"err\",err); }\n\n//   console.log(\"BODY\",body);\n\n//   console.log(res.headers);\n\n//   console.log(res.statusCode);\n\n// });\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}